[{"/home/rmdadmin/Docs/aloop-frontend/src/index.tsx":"1","/home/rmdadmin/Docs/aloop-frontend/src/style/theme.ts":"2","/home/rmdadmin/Docs/aloop-frontend/src/components/app/App.tsx":"3","/home/rmdadmin/Docs/aloop-frontend/src/style/fontFaces.ts":"4","/home/rmdadmin/Docs/aloop-frontend/src/style/colors.ts":"5","/home/rmdadmin/Docs/aloop-frontend/src/routes/Router.tsx":"6","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/ProfilePage.tsx":"7","/home/rmdadmin/Docs/aloop-frontend/src/pages/HomePage.tsx":"8","/home/rmdadmin/Docs/aloop-frontend/src/routes/Paths.ts":"9","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/LoginPage.tsx":"10","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/RegisterPage.tsx":"11","/home/rmdadmin/Docs/aloop-frontend/src/components/video/VideoCall.tsx":"12","/home/rmdadmin/Docs/aloop-frontend/src/pages/templates/CenteredPage.tsx":"13","/home/rmdadmin/Docs/aloop-frontend/src/api/authQueries.ts":"14","/home/rmdadmin/Docs/aloop-frontend/src/components/forms/Auth/LoginForm.tsx":"15","/home/rmdadmin/Docs/aloop-frontend/src/components/forms/Auth/RegisterForm.tsx":"16","/home/rmdadmin/Docs/aloop-frontend/src/utils/validators/emailValidation.ts":"17","/home/rmdadmin/Docs/aloop-frontend/src/utils/validators/passwordValidation.ts":"18","/home/rmdadmin/Docs/aloop-frontend/src/components/forms/template/FormTemplate.tsx":"19","/home/rmdadmin/Docs/aloop-frontend/src/utils/forms/MakeForm.tsx":"20","/home/rmdadmin/Docs/aloop-frontend/src/api/defaults.ts":"21","/home/rmdadmin/Docs/aloop-frontend/src/utils/text/stringAsNestedSelector.ts":"22","/home/rmdadmin/Docs/aloop-frontend/src/utils/text/camelToSentence.ts":"23","/home/rmdadmin/Docs/aloop-frontend/src/config.ts":"24","/home/rmdadmin/Docs/aloop-frontend/src/utils/sockets/socket.ts":"25","/home/rmdadmin/Docs/aloop-frontend/src/components/video/VideoRooms.tsx":"26","/home/rmdadmin/Docs/aloop-frontend/src/components/FetchTemplate.tsx":"27","/home/rmdadmin/Docs/aloop-frontend/src/api/videoQueries.ts":"28","/home/rmdadmin/Docs/aloop-frontend/src/components/video/SidePanel.tsx":"29","/home/rmdadmin/Docs/aloop-frontend/src/components/app/authReducer.ts":"30","/home/rmdadmin/Docs/aloop-frontend/src/components/app/SocketProvider.tsx":"31"},{"size":664,"mtime":1613574076861,"results":"32","hashOfConfig":"33"},{"size":1704,"mtime":1613574076861,"results":"34","hashOfConfig":"33"},{"size":1519,"mtime":1615387218625,"results":"35","hashOfConfig":"33"},{"size":532,"mtime":1613574076861,"results":"36","hashOfConfig":"33"},{"size":14223,"mtime":1613574076861,"results":"37","hashOfConfig":"33"},{"size":1988,"mtime":1614637040760,"results":"38","hashOfConfig":"33"},{"size":996,"mtime":1613574076861,"results":"39","hashOfConfig":"33"},{"size":1667,"mtime":1615328168877,"results":"40","hashOfConfig":"33"},{"size":282,"mtime":1613574076861,"results":"41","hashOfConfig":"33"},{"size":550,"mtime":1613574076861,"results":"42","hashOfConfig":"33"},{"size":423,"mtime":1613574076861,"results":"43","hashOfConfig":"33"},{"size":5540,"mtime":1615392974255,"results":"44","hashOfConfig":"33"},{"size":821,"mtime":1613574076861,"results":"45","hashOfConfig":"33"},{"size":1787,"mtime":1614633519470,"results":"46","hashOfConfig":"33"},{"size":3023,"mtime":1615399343925,"results":"47","hashOfConfig":"33"},{"size":3049,"mtime":1614634992640,"results":"48","hashOfConfig":"33"},{"size":123,"mtime":1613574076871,"results":"49","hashOfConfig":"33"},{"size":105,"mtime":1613574076871,"results":"50","hashOfConfig":"33"},{"size":718,"mtime":1613574076861,"results":"51","hashOfConfig":"33"},{"size":1899,"mtime":1615326657087,"results":"52","hashOfConfig":"33"},{"size":425,"mtime":1614632598150,"results":"53","hashOfConfig":"33"},{"size":645,"mtime":1613574076871,"results":"54","hashOfConfig":"33"},{"size":363,"mtime":1613574076871,"results":"55","hashOfConfig":"33"},{"size":822,"mtime":1615335566897,"results":"56","hashOfConfig":"33"},{"size":4790,"mtime":1616419384970,"results":"57","hashOfConfig":"33"},{"size":1503,"mtime":1615392935145,"results":"58","hashOfConfig":"33"},{"size":593,"mtime":1614283733025,"results":"59","hashOfConfig":"33"},{"size":706,"mtime":1614634425630,"results":"60","hashOfConfig":"33"},{"size":315,"mtime":1615321893687,"results":"61","hashOfConfig":"33"},{"size":1336,"mtime":1616420633430,"results":"62","hashOfConfig":"33"},{"size":1259,"mtime":1616420316710,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"1mdfec9",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"67"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"98","usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"67"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rmdadmin/Docs/aloop-frontend/src/index.tsx",["138"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { gsaTheme } from './style/theme';\nimport { Provider } from '@fluentui/react-northstar';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider theme={gsaTheme}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["139","140"],"/home/rmdadmin/Docs/aloop-frontend/src/style/theme.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/app/App.tsx",["141"],"import React, { createContext, useReducer } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Button, Flex, Debug } from '@fluentui/react-northstar'\nimport { IconContext } from 'react-icons'\n// import { ws, client, room, makeConnection, localConnection } from '../../utils/sockets/socket';\nimport Router from '../../routes/Router'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport { authReducer, UserAuthContext } from './authReducer';\nimport { SocketProvider } from './SocketProvider'\n// The query client for react fetch\nexport const queryClient = new QueryClient()\n\n// The Context for global Auth state (Context API)\nexport const AuthUserContext = createContext<typeof undefined | UserAuthContext>(undefined);\n\nfunction App() {\n  const [selfState, dispatch] = useReducer(authReducer, {\n    auth: false,\n    user: null\n  })\n  return (\n    <AuthUserContext.Provider value={{ selfState, dispatch }}>\n      <SocketProvider>\n        <QueryClientProvider client={queryClient}>\n          <ReactQueryDevtools initialIsOpen={false} />\n          <BrowserRouter>\n            <IconContext.Provider value={{ size: '1.25rem' }}>\n              <Flex column>\n                <Router />\n                <Debug />\n              </Flex>\n            </IconContext.Provider>\n          </BrowserRouter>\n        </QueryClientProvider>\n      </SocketProvider>\n    </AuthUserContext.Provider>\n  );\n}\n\nexport default App;\n","/home/rmdadmin/Docs/aloop-frontend/src/style/fontFaces.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/style/colors.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/routes/Router.tsx",["142","143"],"import React, { ReactElement } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport RegisterPage from \"../pages/Auth/RegisterPage\";\nimport { LOGIN_PATH, REGISTER_PATH } from \"./Paths\";\nimport CenteredPage from \"../pages/templates/CenteredPage\";\nimport { VideoCall } from \"../components/video/VideoCall\";\nimport LoginPage from \"../pages/Auth/LoginPage\";\nimport { HomePage } from \"../pages/HomePage\";\nimport ProfilePage from \"../pages/Auth/ProfilePage\";\nimport { VideoRooms } from \"../components/video/VideoRooms\";\nimport { SidePanel } from '../components/video/SidePanel';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  // const [{ data: loginData }] = useGetOwnEmailQuery();\n\n  // const onlyLoggedIn = (page: ReactElement, alt: ReactElement = <Redirect to=\"/login\" />) => loginData?.getSelf?.email ? page : alt\n  // const onlyLoggedOut = (page: ReactElement, alt: ReactElement = <Redirect to=\"/\" />) => !loginData?.getSelf?.email ? page : alt\n\n  // const self = useGetSelfQuery();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <HomePage />\n      </Route>\n      <Route path={LOGIN_PATH}>\n        {/* {onlyLoggedOut(<LoginPage />)} */}\n        <LoginPage />\n      </Route>\n      <Route path={REGISTER_PATH}>\n        <RegisterPage />\n      </Route>\n      <Route path={\"/video\"}>\n        <CenteredPage>\n          <SidePanel>\n            <VideoRooms />\n          </SidePanel>\n          <VideoCall />\n        </CenteredPage>\n      </Route>\n      <Route path={\"/profile\"}>\n        <ProfilePage />\n      </Route>\n      {/* <Route path={PASS_RESET_PATH}>\n        {onlyLoggedOut(<ForgotPasswordPage />)}\n      </Route> */}\n      {/* <Route path={PASS_RESET_PATH + '/:token'}>\n        {onlyLoggedOut(<PasswordResetPage />)}\n      </Route> */}\n      <Route path=\"*\">\n        {/* <ErrorPage error={{ number: 404, message: \"Page not found\" }}></ErrorPage> */}\n      </Route>\n    </Switch>\n  )\n}","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/ProfilePage.tsx",["144","145","146","147"],"import React, { ReactElement, useEffect } from 'react';\nimport CenteredPage from '../templates/CenteredPage';\nimport { Link, Redirect } from 'react-router-dom';\nimport { LOGIN_PATH, } from '../../routes/Paths';\nimport { useGetSelfQuery } from '../../api/authQueries';\nimport { Flex, Loader, Text } from '@fluentui/react-northstar'\n\nconst ProfilePage = (): ReactElement => {\n    // const authenticated = false\n\n    // const cache = useQueryCache();\n    const { status, data, error, isFetching } = useGetSelfQuery();\n\n    return isFetching ? (<Loader />) : !error ?\n        (\n            <CenteredPage>\n                <h1>Welcome {data.email}</h1>\n            </CenteredPage>\n        )\n        : (\n            // <Redirect to={LOGIN_PATH} />\n            <CenteredPage>\n                <Text error>{typeof error === \"string\" ? error : \"Authentication Error: Timeout\"}</Text>\n                <Link to={LOGIN_PATH}>Login</Link>\n            </CenteredPage>\n        )\n\n\n}\n\n\nexport default ProfilePage;\n","/home/rmdadmin/Docs/aloop-frontend/src/pages/HomePage.tsx",["148"],"import { Flex, Loader, Text } from '@fluentui/react-northstar'\nimport React, { useContext } from 'react'\nimport { useQueryClient } from 'react-query'\nimport { Link } from 'react-router-dom'\nimport { useGetUsers } from '../api/authQueries'\nimport { AuthUserContext } from '../components/app/App'\nimport { LOGIN_PATH, REGISTER_PATH } from '../routes/Paths'\nimport CenteredPage from './templates/CenteredPage'\n\ninterface Props {\n\n}\n\nexport const HomePage: React.FC<Props> = ({ children }) => {\n    // const cache = useQueryClient();\n    const { data, error, isFetching } = useGetUsers();\n    const authcontext = useContext(AuthUserContext)\n\n\n    return (\n        <CenteredPage>\n            {/* {onlyLoggedIn(<Temp />, <h1>Welcome to Greenstar Aviation</h1>)} */}\n            <Flex styles={{ width: \"100%\", justifyContent: \"space-evenly\", margin: '2rem 10rem' }}>\n                {!authcontext?.selfState?.auth ?\n                    <>\n                        <Link to={LOGIN_PATH}>Login</Link>\n                        <Link to={REGISTER_PATH}>Register</Link>\n                    </> :\n                    <>\n                        <Link to='/video'>Video</Link>\n                        <Link to='/profile'>Profile</Link>\n                    </>}\n            </Flex>\n            <Text content=\"Users:\" size=\"largest\" weight=\"bold\" />\n            {\n                isFetching ?\n                    (<Loader />) :\n                    (error ? (<Text content=\"Error retrieving users\" error />) : (\n                        data.map((user: any) => (<Text content={user.first_name} key={user.user_id} />))\n                    ))\n            }\n\n\n        </CenteredPage>\n    )\n}","/home/rmdadmin/Docs/aloop-frontend/src/routes/Paths.ts",["149"],"export const LOGIN_PATH = '/login';\nexport const REGISTER_PATH = '/register';\nexport const PASS_RESET_PATH = '/register';\nexport const SELF_PATH = `/self`;\nexport const USER_PATH = '/user';\n\nexport const USERS_PATH = `${USER_PATH}s`;\n\n// Crud suffixes\nconst CREATE_SUFFIX = '/new';\n","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/LoginPage.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/RegisterPage.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/video/VideoCall.tsx",["150","151"],"import { Button } from '@fluentui/react-northstar'\nimport React, { useEffect, useRef, useState } from 'react'\n// import { makeConnection, localConnection, client } from '../../utils/sockets/socket';!!!\n\ninterface Props {\n\n}\n\nexport const VideoCall: React.FC<Props> = ({ children }) => {\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const incomingVidRef = useRef<HTMLVideoElement>(null);\n    // const [streamOut, setStream] = useState<MediaStream>()\n    const [inCall, setInCall] = useState(false)\n    const [callMessage, setCallMessage] = useState<string>(\"\")\n\n    const signalConnect = () => {\n        setInCall(true)\n        // if (makeConnection()) {\n\n        // } else {\n        //     setInCall(false)\n        //     console.log(\"Could not connect\")\n        //     setCallMessage(\"Could not connect\")\n        // }\n    }\n\n    const pipeErr = (err: Error) => { throw err }\n\n    useEffect(() => {\n        if (!navigator.mediaDevices?.getUserMedia({ audio: false, video: true })\n            .then((stream) => {\n                if (videoRef?.current) {\n                    videoRef.current.srcObject = stream\n                    // localConnection.ontrack = gotRemoteStream;\n                    // stream.getTracks().forEach(track => localConnection.addTrack(track, stream));\n                    //! setStream(stream)\n                    // !makeVideoCall(stream)\n                }\n            }).catch((err) => console.error(`Error getting media device`, err))) {\n            // There are no media devices\n            setCallMessage(\"No media devices found, is your camera / microphone connected?\")\n        };\n    }, [videoRef])\n\n    const canPlay = () => {\n        if (videoRef?.current) { videoRef.current.play() }\n    }\n\n    const gotRemoteStream = (e: any) => {\n        if (incomingVidRef?.current && incomingVidRef?.current?.srcObject !== e.streams[0]) {\n            incomingVidRef.current.srcObject = e.streams[0];\n            // console.log('pc2 received remote stream');\n        }\n    }\n\n\n    // const makeVideoCall = (stream: MediaStream) => {\n    //     const localConnection = new RTCPeerConnection();\n    //     const remoteConnection = new RTCPeerConnection();\n\n    //     // Add Ice Candidate when created\n    //     localConnection.onicecandidate = (iceEvent) => {\n    //         // console.log('LocalConnection : Adding Candidate', iceEvent.candidate)\n    //         if (iceEvent.candidate) remoteConnection.addIceCandidate(iceEvent.candidate)\n    //     }\n    //     // localConnection.oniceconnectionstatechange = (stateChangeEvent) => console.log('localConnection state Change ', stateChangeEvent)\n\n    //     // Add Ice Candidate when created\n    //     remoteConnection.onicecandidate = (iceEvent) => {\n    //         // console.log('RemoteConnection : Adding Candidate', iceEvent.candidate)\n    //         if (iceEvent.candidate) localConnection.addIceCandidate(iceEvent.candidate)\n    //     }\n    //     // remoteConnection.oniceconnectionstatechange = (stateChangeEvent) => console.log('remote state Change', stateChangeEvent)\n\n    //     remoteConnection.addEventListener('track', gotRemoteStream);\n\n    //     stream.getTracks().forEach(track => localConnection.addTrack(track, stream));\n    //     console.log('Added stream to local');\n\n    //     // Create an offer to connect (Sets up the terms for the call)\n    //     localConnection.createOffer({ offerToReceiveVideo: true }).then(async (offer) => {\n    //         // console.log(`Offer from local\\n${offer.sdp}`);\n    //         // Set the description of tye call on the local PC\n    //         // console.log('local setLocalDescription start');\n    //         await localConnection.setLocalDescription(offer).catch(pipeErr)\n    //         // console.log(`remote setRemoteDescription start`);\n    //         // Set the description of the call on the remote PC\n    //         await remoteConnection.setRemoteDescription(offer).catch(pipeErr)\n    //         // Remote PC answers local\n    //         console.log(\"creating answer\")\n    //         const answer = await remoteConnection.createAnswer().catch(pipeErr)\n    //         // console.log(`Answer from remote:\\n${offer.sdp}`);\n    //         // Set the description of the answer to the call remote\n    //         // console.log('remote setLocalDescription start');\n    //         await remoteConnection.setLocalDescription(answer).catch(pipeErr)\n    //         // Set the description of the answer to the call on local\n    //         // console.log('local setRemoteDescription start');\n    //         await localConnection.setRemoteDescription(answer).catch(pipeErr)\n    //     })\n    //         .catch(err => console.error(err))\n    // }\n\n\n    return (\n        <div>\n            <div style={{ position: \"relative\" }}>\n                <video ref={videoRef} onCanPlay={canPlay} id=\"player\" autoPlay playsInline muted width=\"426\" height=\"240\" />\n                <p style={{ position: \"absolute\", color: 'white', top: 10, left: 10 }}>Your Name: {\"client\"}</p>\n            </div>\n            {/* {inCall ? ( */}\n            <div style={{ position: \"relative\" }}>\n                <video ref={incomingVidRef} playsInline autoPlay width=\"426\" height=\"240\"></video>\n                <p style={{ position: \"absolute\", color: 'white', top: 10, left: 10 }}>Caller Name: {'caller'}</p>\n            </div>\n            {/* ) : ''\n             } */}\n            <p>{callMessage}</p>\n            <Button content=\"Join Room\" primary onClick={() => signalConnect()} disabled={inCall} />\n        </div>\n    )\n}","/home/rmdadmin/Docs/aloop-frontend/src/pages/templates/CenteredPage.tsx",["152","153","154"],"import React, { ReactElement } from 'react';\nimport { Button, Flex } from '@fluentui/react-northstar';\nimport { gsaTheme } from '../../style/theme';\n\ninterface Props {\n    vertCenter?: boolean\n}\n\nconst CenteredPage: React.FC<Props> = ({ children, vertCenter: vertCenter = false }) => (\n    <Flex styles={{ height: '100vh', overflowY: 'scroll', width: '100%', justifyContent: 'center', backgroundColor: gsaTheme.siteVariables.colors.grey[200] }}>\n        <Flex styles={{ minHeight: '80vh', height: 'fit-content', justifyContent: vertCenter ? 'center' : 'flex-start', alignItems: 'center', flexDirection: 'column', margin: '10vh 2rem', padding: '2rem', backgroundColor: gsaTheme.siteVariables.colors.white, width: 'min( 50rem, 100%)' }}>\n            {children}\n        </Flex>\n    </Flex>\n);\n\n\nexport default CenteredPage;\n","/home/rmdadmin/Docs/aloop-frontend/src/api/authQueries.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/forms/Auth/LoginForm.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/forms/Auth/RegisterForm.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/utils/validators/emailValidation.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/utils/validators/passwordValidation.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/forms/template/FormTemplate.tsx",["155","156"],"import React, { ReactElement, useState } from 'react'\nimport { ComponentEventHandler, Form, FormProps } from '@fluentui/react-northstar'\nimport { Redirect } from 'react-router-dom';\n\ninterface Props {\n    onSubmit?: ComponentEventHandler<FormProps>\n    success?: boolean,\n    fetching?: boolean\n    to?: string\n}\n\nexport const FormTemplate: React.FC<Props> = ({ children, onSubmit, success, fetching, to = '/' }) => {\n    return success ? <Redirect to={to} /> : (\n        <Form onSubmit={onSubmit} styles={{ justifyContent: 'start', width: 'auto', margin: '1rem 2rem' }}>\n            {children}\n            <Form.Button content=\"Submit\" loading={fetching} disabled={fetching} fluid primary />\n        </Form>\n    )\n}\n\n","/home/rmdadmin/Docs/aloop-frontend/src/utils/forms/MakeForm.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/api/defaults.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/utils/text/stringAsNestedSelector.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/utils/text/camelToSentence.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/config.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/utils/sockets/socket.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/video/VideoRooms.tsx",["157"],"import { Flex } from \"@fluentui/react-northstar\";\nimport React, { useEffect, useState } from \"react\";\nimport { useGetVideoChannelQuery } from \"../../api/videoQueries\";\n// import { setGetOnlineUsers, triggerGetOnlineUsers } from \"../../utils/sockets/socket\";!\nimport { FetchTemplate } from \"../FetchTemplate\";\n\ninterface Props {\n}\n\ninterface ReshapedroomUsers {\n    [room: string]: number[]\n}\n\nexport const VideoRooms: React.FC<Props> = () => {\n    // const [videoChannels, setVideoChannels] = useState([]);\n    const { data, error, isFetching } = useGetVideoChannelQuery();\n    const [roomUsers, setRoomUsers] = useState<ReshapedroomUsers>({})\n    useEffect(() => {\n        // Handle GetUsers return from ws\n        // setGetOnlineUsers((json) => {\n        //     let roomMap: ReshapedroomUsers = {}\n        //     for (const roomUser of json.online_users) {\n        //         roomMap[roomUser.room] = roomUser.user_ids\n        //     }\n        //     setRoomUsers(roomMap)\n        // })\n        // Send GetUsers\n        // triggerGetOnlineUsers()\n\n        // return setGetOnlineUsers((json) => { console.error(json) })\n    }, [])\n    return (\n        <Flex column>\n            <FetchTemplate error={error} isFetching={isFetching}>\n                {data?.map(({ channel_name, video_channel_id }) => (\n                    <p key={video_channel_id}>Room {video_channel_id}: {channel_name} { roomUsers[channel_name] ? \"\" : \"\"}</p>\n                ))}\n            </FetchTemplate>\n        </Flex>\n    )\n};\n","/home/rmdadmin/Docs/aloop-frontend/src/components/FetchTemplate.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/api/videoQueries.ts",["158","159"],"import { useMutation, useQuery } from 'react-query';\nimport { getFetch, postFetch } from './defaults';\n\nconst VIDEO_CHANNEL_CACHE_KEY = 'video_channel';\n\nexport interface VideoChannelRes {\n  video_channel_id: number;\n  channel_name: string;\n  created_at: string;\n}\n\nconst getVideoChannels = async () =>\n  getFetch('/vidchan')\n    .then((res) => {\n      console.log(res);\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw new Error('Authentication Error');\n      }\n    })\n    .catch((e) => {\n      console.error('POST REQUEST ERROR', e);\n      throw e;\n    });\n\nexport const useGetVideoChannelQuery = () =>\n  useQuery<VideoChannelRes[]>(VIDEO_CHANNEL_CACHE_KEY, getVideoChannels);\n","/home/rmdadmin/Docs/aloop-frontend/src/components/video/SidePanel.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/app/authReducer.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/app/SocketProvider.tsx",["160"],{"ruleId":"161","severity":1,"message":"162","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":23},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"161","severity":1,"message":"169","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":16},{"ruleId":"161","severity":1,"message":"170","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":29},{"ruleId":"161","severity":1,"message":"171","line":3,"column":20,"nodeType":"163","messageId":"164","endLine":3,"endColumn":26},{"ruleId":"161","severity":1,"message":"172","line":1,"column":31,"nodeType":"163","messageId":"164","endLine":1,"endColumn":40},{"ruleId":"161","severity":1,"message":"173","line":3,"column":16,"nodeType":"163","messageId":"164","endLine":3,"endColumn":24},{"ruleId":"161","severity":1,"message":"174","line":6,"column":10,"nodeType":"163","messageId":"164","endLine":6,"endColumn":14},{"ruleId":"161","severity":1,"message":"175","line":12,"column":13,"nodeType":"163","messageId":"164","endLine":12,"endColumn":19},{"ruleId":"161","severity":1,"message":"176","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":24},{"ruleId":"161","severity":1,"message":"177","line":10,"column":7,"nodeType":"163","messageId":"164","endLine":10,"endColumn":20},{"ruleId":"161","severity":1,"message":"178","line":27,"column":11,"nodeType":"163","messageId":"164","endLine":27,"endColumn":18},{"ruleId":"161","severity":1,"message":"179","line":49,"column":11,"nodeType":"163","messageId":"164","endLine":49,"endColumn":26},{"ruleId":"161","severity":1,"message":"170","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":29},{"ruleId":"161","severity":1,"message":"169","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":9,"column":52,"nodeType":"182","messageId":"183","endLine":9,"endColumn":82,"fix":"184"},{"ruleId":"161","severity":1,"message":"170","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":29},{"ruleId":"161","severity":1,"message":"185","line":1,"column":31,"nodeType":"163","messageId":"164","endLine":1,"endColumn":39},{"ruleId":"161","severity":1,"message":"186","line":17,"column":23,"nodeType":"163","messageId":"164","endLine":17,"endColumn":35},{"ruleId":"161","severity":1,"message":"187","line":1,"column":10,"nodeType":"163","messageId":"164","endLine":1,"endColumn":21},{"ruleId":"161","severity":1,"message":"188","line":2,"column":20,"nodeType":"163","messageId":"164","endLine":2,"endColumn":29},{"ruleId":"161","severity":1,"message":"189","line":19,"column":11,"nodeType":"163","messageId":"164","endLine":19,"endColumn":22},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["190"],"no-negated-in-lhs",["191"],"'Button' is defined but never used.","'ReactElement' is defined but never used.","'Router' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'Flex' is defined but never used.","'status' is assigned a value but never used.","'useQueryClient' is defined but never used.","'CREATE_SUFFIX' is assigned a value but never used.","'pipeErr' is assigned a value but never used.","'gotRemoteStream' is assigned a value but never used.","no-useless-rename","Destructuring assignment vertCenter unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"192","text":"193"},"'useState' is defined but never used.","'setRoomUsers' is assigned a value but never used.","'useMutation' is defined but never used.","'postFetch' is defined but never used.","'authContext' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[247,277],"vertCenter = false"]