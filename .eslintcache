[{"C:\\Users\\rossm\\chatapp\\src\\index.tsx":"1","C:\\Users\\rossm\\chatapp\\src\\style\\theme.ts":"2","C:\\Users\\rossm\\chatapp\\src\\components\\app\\App.tsx":"3","C:\\Users\\rossm\\chatapp\\src\\style\\colors.ts":"4","C:\\Users\\rossm\\chatapp\\src\\style\\fontFaces.ts":"5","C:\\Users\\rossm\\chatapp\\src\\utils\\sockets\\socket.ts":"6","C:\\Users\\rossm\\chatapp\\src\\routes\\Router.tsx":"7","C:\\Users\\rossm\\chatapp\\src\\routes\\Paths.ts":"8","C:\\Users\\rossm\\chatapp\\src\\pages\\templates\\CenteredPage.tsx":"9","C:\\Users\\rossm\\chatapp\\src\\pages\\templates\\ErrorPage.tsx":"10","C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\RegisterPage.tsx":"11","C:\\Users\\rossm\\chatapp\\src\\components\\video\\VideoCall.tsx":"12","C:\\Users\\rossm\\chatapp\\src\\components\\forms\\Auth\\RegisterForm.tsx":"13","C:\\Users\\rossm\\chatapp\\src\\utils\\validators\\passwordValidation.ts":"14","C:\\Users\\rossm\\chatapp\\src\\utils\\validators\\emailValidation.ts":"15","C:\\Users\\rossm\\chatapp\\src\\components\\forms\\template\\FormTemplate.tsx":"16","C:\\Users\\rossm\\chatapp\\src\\utils\\forms\\MakeForm.tsx":"17","C:\\Users\\rossm\\chatapp\\src\\utils\\text\\stringAsNestedSelector.ts":"18","C:\\Users\\rossm\\chatapp\\src\\utils\\text\\camelToSentence.ts":"19","C:\\Users\\rossm\\chatapp\\src\\config.ts":"20","C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\LoginPage.tsx":"21","C:\\Users\\rossm\\chatapp\\src\\api\\authQueries.ts":"22","C:\\Users\\rossm\\chatapp\\src\\api\\defaults.ts":"23","C:\\Users\\rossm\\chatapp\\src\\components\\forms\\Auth\\LoginForm.tsx":"24","C:\\Users\\rossm\\chatapp\\src\\pages\\HomePage.tsx":"25","C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\ProfilePage.tsx":"26"},{"size":664,"mtime":1603472709113,"results":"27","hashOfConfig":"28"},{"size":1783,"mtime":1603472644016,"results":"29","hashOfConfig":"28"},{"size":888,"mtime":1607274127349,"results":"30","hashOfConfig":"28"},{"size":14702,"mtime":1603472643725,"results":"31","hashOfConfig":"28"},{"size":557,"mtime":1603472643822,"results":"32","hashOfConfig":"28"},{"size":3771,"mtime":1607512638059,"results":"33","hashOfConfig":"28"},{"size":1850,"mtime":1607467649277,"results":"34","hashOfConfig":"28"},{"size":292,"mtime":1607457318801,"results":"35","hashOfConfig":"28"},{"size":839,"mtime":1607205946848,"results":"36","hashOfConfig":"28"},{"size":1004,"mtime":1607205995915,"results":"37","hashOfConfig":"28"},{"size":436,"mtime":1607277908069,"results":"38","hashOfConfig":"28"},{"size":5349,"mtime":1607512818925,"results":"39","hashOfConfig":"28"},{"size":3111,"mtime":1607454846260,"results":"40","hashOfConfig":"28"},{"size":110,"mtime":1607275596172,"results":"41","hashOfConfig":"28"},{"size":128,"mtime":1607275575746,"results":"42","hashOfConfig":"28"},{"size":738,"mtime":1607275648643,"results":"43","hashOfConfig":"28"},{"size":1920,"mtime":1607275359046,"results":"44","hashOfConfig":"28"},{"size":661,"mtime":1607275308672,"results":"45","hashOfConfig":"28"},{"size":375,"mtime":1607275308668,"results":"46","hashOfConfig":"28"},{"size":787,"mtime":1607510826491,"results":"47","hashOfConfig":"28"},{"size":566,"mtime":1607448283697,"results":"48","hashOfConfig":"28"},{"size":1813,"mtime":1607468026513,"results":"49","hashOfConfig":"28"},{"size":441,"mtime":1607469121520,"results":"50","hashOfConfig":"28"},{"size":2466,"mtime":1607454855643,"results":"51","hashOfConfig":"28"},{"size":1387,"mtime":1607468110155,"results":"52","hashOfConfig":"28"},{"size":1028,"mtime":1607468199105,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"3vs2uj",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"77","usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"57"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"57"},"C:\\Users\\rossm\\chatapp\\src\\index.tsx",["118"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { gsaTheme } from './style/theme';\nimport { Provider } from '@fluentui/react-northstar';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider theme={gsaTheme}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["119","120"],"C:\\Users\\rossm\\chatapp\\src\\style\\theme.ts",[],"C:\\Users\\rossm\\chatapp\\src\\components\\app\\App.tsx",["121","122","123","124","125","126","127","128","129","130","131","132","133"],"import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Button, Flex, Debug } from '@fluentui/react-northstar'\nimport { IconContext } from 'react-icons'\nimport { ws, client, room, makeConnection, localConnection } from '../../utils/sockets/socket';\nimport Router from '../../routes/Router'\nimport { useQuery, useMutation, useQueryCache, QueryCache, ReactQueryCacheProvider } from 'react-query'\n\nconst queryCache = new QueryCache()\n\nfunction App() {\n  return (\n    <ReactQueryCacheProvider queryCache={queryCache}>\n      <BrowserRouter>\n        <IconContext.Provider value={{ size: '1.25rem' }}>\n          <Flex column>\n            <Router />\n            <Debug />\n          </Flex>\n        </IconContext.Provider>\n      </BrowserRouter>\n    </ReactQueryCacheProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\rossm\\chatapp\\src\\style\\colors.ts",[],"C:\\Users\\rossm\\chatapp\\src\\style\\fontFaces.ts",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\sockets\\socket.ts",[],"C:\\Users\\rossm\\chatapp\\src\\routes\\Router.tsx",["134","135"],"import React, { ReactElement } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport RegisterPage from \"../pages/Auth/RegisterPage\";\r\nimport { LOGIN_PATH, REGISTER_PATH } from \"./Paths\";\r\nimport CenteredPage from \"../pages/templates/CenteredPage\";\r\nimport { VideoCall } from \"../components/video/VideoCall\";\r\nimport LoginPage from \"../pages/Auth/LoginPage\";\r\nimport { HomePage } from \"../pages/HomePage\";\r\nimport ProfilePage from \"../pages/Auth/ProfilePage\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n  // const [{ data: loginData }] = useGetOwnEmailQuery();\r\n\r\n  // const onlyLoggedIn = (page: ReactElement, alt: ReactElement = <Redirect to=\"/login\" />) => loginData?.getSelf?.email ? page : alt\r\n  // const onlyLoggedOut = (page: ReactElement, alt: ReactElement = <Redirect to=\"/\" />) => !loginData?.getSelf?.email ? page : alt\r\n\r\n  // const self = useGetSelfQuery();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <HomePage />\r\n      </Route>\r\n      <Route path={LOGIN_PATH}>\r\n        {/* {onlyLoggedOut(<LoginPage />)} */}\r\n        <LoginPage />\r\n      </Route>\r\n      <Route path={REGISTER_PATH}>\r\n        <RegisterPage />\r\n      </Route>\r\n      <Route path={\"/video\"}>\r\n        <CenteredPage>\r\n          <VideoCall />\r\n        </CenteredPage>\r\n      </Route>\r\n      <Route path={\"/profile\"}>\r\n        <ProfilePage />\r\n      </Route>\r\n      {/* <Route path={PASS_RESET_PATH}>\r\n        {onlyLoggedOut(<ForgotPasswordPage />)}\r\n      </Route> */}\r\n      {/* <Route path={PASS_RESET_PATH + '/:token'}>\r\n        {onlyLoggedOut(<PasswordResetPage />)}\r\n      </Route> */}\r\n      <Route path=\"*\">\r\n        {/* <ErrorPage error={{ number: 404, message: \"Page not found\" }}></ErrorPage> */}\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}","C:\\Users\\rossm\\chatapp\\src\\routes\\Paths.ts",["136"],"export const LOGIN_PATH = '/login';\r\nexport const REGISTER_PATH = '/register';\r\nexport const PASS_RESET_PATH = '/register';\r\nexport const SELF_PATH = `/self`;\r\nexport const USER_PATH = '/user';\r\n\r\nexport const USERS_PATH = `${USER_PATH}s`;\r\n\r\n// Crud suffixes\r\nconst CREATE_SUFFIX = '/new';\r\n","C:\\Users\\rossm\\chatapp\\src\\pages\\templates\\CenteredPage.tsx",["137","138","139"],"import React, { ReactElement } from 'react';\r\nimport { Button, Flex } from '@fluentui/react-northstar';\r\nimport { gsaTheme } from '../../style/theme';\r\n\r\ninterface Props {\r\n    vertCenter?: boolean\r\n}\r\n\r\nconst CenteredPage: React.FC<Props> = ({ children, vertCenter: vertCenter = false }) => (\r\n    <Flex styles={{ height: '100vh', overflowY: 'scroll', width: '100%', justifyContent: 'center', backgroundColor: gsaTheme.siteVariables.colors.grey[200] }}>\r\n        <Flex styles={{ minHeight: '80vh', height: 'fit-content', justifyContent: vertCenter ? 'center' : 'flex-start', alignItems: 'center', flexDirection: 'column', margin: '10vh 2rem', padding: '2rem', backgroundColor: gsaTheme.siteVariables.colors.white, width: 'min( 50rem, 100%)' }}>\r\n            {children}\r\n        </Flex>\r\n    </Flex>\r\n);\r\n\r\n\r\nexport default CenteredPage;\r\n","C:\\Users\\rossm\\chatapp\\src\\pages\\templates\\ErrorPage.tsx",["140"],"import React, { ReactElement } from 'react';\r\nimport { Button, Flex } from '@fluentui/react-northstar';\r\nimport { gsaTheme } from '../../style/theme';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface ErrorPageProps {\r\n    error: {\r\n        number: number;\r\n        message: string;\r\n    }\r\n}\r\n\r\nconst ErrorPage: React.FC<ErrorPageProps> = ({ error }) => (\r\n    <Flex styles={{ minHeight: '100vh', width: '100%', justifyContent: 'center', backgroundColor: gsaTheme.siteVariables.colors.grey[300] }}>\r\n        <Flex style={{ fontSize: '15rem', justifyContent: 'center', alignItems: 'center' }}>🤯</Flex>\r\n        <Flex styles={{ justifyContent: 'center', alignItems: 'center', flexDirection: 'column', margin: '10vh 2rem', padding: '2rem' }}>\r\n            <h1 style={{ fontSize: '6rem', fontWeight: 700 }}>{error.number}</h1>\r\n            <h1>{error.message}</h1>\r\n            <Button as={Link} to='/' primary >Take me Home</Button>\r\n        </Flex>\r\n    </Flex >\r\n);\r\n\r\n\r\nexport default ErrorPage;",["141","142"],"C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\RegisterPage.tsx",[],"C:\\Users\\rossm\\chatapp\\src\\components\\video\\VideoCall.tsx",["143"],"C:\\Users\\rossm\\chatapp\\src\\components\\forms\\Auth\\RegisterForm.tsx",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\validators\\passwordValidation.ts",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\validators\\emailValidation.ts",[],"C:\\Users\\rossm\\chatapp\\src\\components\\forms\\template\\FormTemplate.tsx",["144","145"],"import React, { ReactElement, useState } from 'react'\r\nimport { ComponentEventHandler, Form, FormProps } from '@fluentui/react-northstar'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    onSubmit?: ComponentEventHandler<FormProps>\r\n    success?: boolean,\r\n    fetching?: boolean\r\n    to?: string\r\n}\r\n\r\nexport const FormTemplate: React.FC<Props> = ({ children, onSubmit, success, fetching, to = '/' }) => {\r\n    return success ? <Redirect to={to} /> : (\r\n        <Form onSubmit={onSubmit} styles={{ justifyContent: 'start', width: 'auto', margin: '1rem 2rem' }}>\r\n            {children}\r\n            <Form.Button content=\"Submit\" loading={fetching} disabled={fetching} fluid primary />\r\n        </Form>\r\n    )\r\n}\r\n\r\n","C:\\Users\\rossm\\chatapp\\src\\utils\\forms\\MakeForm.tsx",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\text\\stringAsNestedSelector.ts",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\text\\camelToSentence.ts",[],"C:\\Users\\rossm\\chatapp\\src\\config.ts",[],"C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\LoginPage.tsx",[],"C:\\Users\\rossm\\chatapp\\src\\api\\authQueries.ts",[],"C:\\Users\\rossm\\chatapp\\src\\api\\defaults.ts",[],"C:\\Users\\rossm\\chatapp\\src\\components\\forms\\Auth\\LoginForm.tsx",["146"],"\r\n\r\n\r\nimport React, { useState } from 'react'\r\nimport { SubmitHandler, useForm } from 'react-hook-form'\r\nimport { useLoginQuery } from '../../../api/authQueries'\r\nimport { MakeForm } from '../../../utils/forms/MakeForm'\r\nimport { emailValidation } from '../../../utils/validators/emailValidation'\r\nimport { passwordValidation } from '../../../utils/validators/passwordValidation'\r\nimport { FormTemplate } from '../template/FormTemplate'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nexport const LoginForm: React.FC<Props> = ({ children }) => {\r\n\r\n    // Form Validation\r\n    const { register, handleSubmit, setError, errors, formState, getValues } = useForm({ mode: 'onBlur', reValidateMode: 'onBlur' });\r\n    // Submission : Change to react Query\r\n    // const [{ fetching }, registerMutation] = useRegisterMutation()\r\n    // const todosQuery = useQuery('todos', getTodos)\r\n    // const { isLoading, error, data }\r\n\r\n    const [loginMutation, { isLoading }] = useLoginQuery();\r\n\r\n    const [success, setSuccess] = useState(false)\r\n\r\n    const attemptLogin: SubmitHandler<any> = (data) => {\r\n        // Get email and password from data\r\n        const { email, password } = data;\r\n        //Try to login\r\n        if (email && password) {\r\n            loginMutation({ email, pass: password, })\r\n                .then((all) => {\r\n                    console.log(all)\r\n                    // If theres a server error show in UI\r\n                    if (all && all.error) return setError(\"password\", {\r\n                        type: \"server\",\r\n                        message: \"Email already taken\"\r\n                    })\r\n                    // Process successful login\r\n                    console.log(all)\r\n                    setSuccess(true)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    setError(\"password\", { type: \"server\", message: \"Error: 500\" })\r\n                })\r\n        } else {\r\n            setError(\"password\", {\r\n                type: \"server\",\r\n                message: \"Invalid input\"\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (<FormTemplate success={success} fetching={isLoading} onSubmit={handleSubmit(attemptLogin)}>\r\n        {MakeForm([\r\n            { id: \"email\", type: 'email', validation: emailValidation },\r\n            { id: \"password\", type: 'password', validation: passwordValidation }\r\n        ],\r\n            errors, register, formState)}\r\n    </FormTemplate>\r\n    )\r\n}","C:\\Users\\rossm\\chatapp\\src\\pages\\HomePage.tsx",["147","148"],"import { Flex, Loader, Text } from '@fluentui/react-northstar'\r\nimport React from 'react'\r\nimport { useQueryCache } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport { useGetUsers } from '../api/authQueries'\r\nimport { LOGIN_PATH, REGISTER_PATH } from '../routes/Paths'\r\nimport CenteredPage from './templates/CenteredPage'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nexport const HomePage: React.FC<Props> = ({ children }) => {\r\n    const cache = useQueryCache();\r\n    const { status, data, error, isFetching } = useGetUsers();\r\n\r\n\r\n    return (\r\n        <CenteredPage>\r\n            {/* {onlyLoggedIn(<Temp />, <h1>Welcome to Greenstar Aviation</h1>)} */}\r\n            <Flex styles={{ width: \"100%\", justifyContent: \"space-evenly\", margin: '2rem 10rem' }}>\r\n                <Link to={LOGIN_PATH}>Login</Link>\r\n                <Link to={REGISTER_PATH}>Register</Link>\r\n                <Link to='/video'>Video</Link>\r\n                <Link to='/profile'>Profile</Link>\r\n            </Flex>\r\n            <Text content=\"Users:\" size=\"largest\" weight=\"bold\" />\r\n            {\r\n                isFetching ?\r\n                    (<Loader />) :\r\n                    (error ? (<Text content=\"Error retrieving users\" error />) : (\r\n                        data.map((user: any) => (<Text content={user.first_name} />))\r\n                    ))\r\n            }\r\n\r\n\r\n        </CenteredPage>\r\n    )\r\n}","C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\ProfilePage.tsx",["149","150","151","152"],"import React, { ReactElement, useEffect } from 'react';\r\nimport CenteredPage from '../templates/CenteredPage';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { LOGIN_PATH, } from '../../routes/Paths';\r\nimport { useGetSelfQuery } from '../../api/authQueries';\r\nimport { Flex, Loader, Text } from '@fluentui/react-northstar'\r\n\r\nconst ProfilePage = (): ReactElement => {\r\n    // const authenticated = false\r\n\r\n    // const cache = useQueryCache();\r\n    const { status, data, error, isFetching } = useGetSelfQuery();\r\n\r\n    return isFetching ? (<Loader />) : !error ?\r\n        (\r\n            <CenteredPage>\r\n                <h1>Welcome {data.email}</h1>\r\n            </CenteredPage>\r\n        )\r\n        : (\r\n            // <Redirect to={LOGIN_PATH} />\r\n            <CenteredPage>\r\n                <Text error>{typeof error === \"string\" ? error : \"Authentication Error: Timeout\"}</Text>\r\n                <Link to={LOGIN_PATH}>Login</Link>\r\n            </CenteredPage>\r\n        )\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfilePage;\r\n",{"ruleId":"153","severity":1,"message":"154","line":5,"column":8,"nodeType":"155","messageId":"156","endLine":5,"endColumn":23},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"153","severity":1,"message":"161","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"162","line":1,"column":28,"nodeType":"155","messageId":"156","endLine":1,"endColumn":35},{"ruleId":"153","severity":1,"message":"163","line":1,"column":37,"nodeType":"155","messageId":"156","endLine":1,"endColumn":43},{"ruleId":"153","severity":1,"message":"164","line":1,"column":45,"nodeType":"155","messageId":"156","endLine":1,"endColumn":53},{"ruleId":"153","severity":1,"message":"165","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":16},{"ruleId":"153","severity":1,"message":"166","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":12},{"ruleId":"153","severity":1,"message":"167","line":6,"column":14,"nodeType":"155","messageId":"156","endLine":6,"endColumn":20},{"ruleId":"153","severity":1,"message":"168","line":6,"column":22,"nodeType":"155","messageId":"156","endLine":6,"endColumn":26},{"ruleId":"153","severity":1,"message":"169","line":6,"column":28,"nodeType":"155","messageId":"156","endLine":6,"endColumn":42},{"ruleId":"153","severity":1,"message":"170","line":6,"column":44,"nodeType":"155","messageId":"156","endLine":6,"endColumn":59},{"ruleId":"153","severity":1,"message":"171","line":8,"column":10,"nodeType":"155","messageId":"156","endLine":8,"endColumn":18},{"ruleId":"153","severity":1,"message":"172","line":8,"column":20,"nodeType":"155","messageId":"156","endLine":8,"endColumn":31},{"ruleId":"153","severity":1,"message":"173","line":8,"column":33,"nodeType":"155","messageId":"156","endLine":8,"endColumn":46},{"ruleId":"153","severity":1,"message":"174","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":29},{"ruleId":"153","severity":1,"message":"175","line":3,"column":20,"nodeType":"155","messageId":"156","endLine":3,"endColumn":26},{"ruleId":"153","severity":1,"message":"176","line":10,"column":7,"nodeType":"155","messageId":"156","endLine":10,"endColumn":20},{"ruleId":"153","severity":1,"message":"174","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":29},{"ruleId":"153","severity":1,"message":"165","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":16},{"ruleId":"177","severity":1,"message":"178","line":9,"column":52,"nodeType":"179","messageId":"180","endLine":9,"endColumn":82,"fix":"181"},{"ruleId":"153","severity":1,"message":"174","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":29},{"ruleId":"157","replacedBy":"182"},{"ruleId":"159","replacedBy":"183"},{"ruleId":"153","severity":1,"message":"184","line":54,"column":11,"nodeType":"155","messageId":"156","endLine":54,"endColumn":24},{"ruleId":"153","severity":1,"message":"174","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":29},{"ruleId":"153","severity":1,"message":"164","line":1,"column":31,"nodeType":"155","messageId":"156","endLine":1,"endColumn":39},{"ruleId":"153","severity":1,"message":"185","line":19,"column":66,"nodeType":"155","messageId":"156","endLine":19,"endColumn":75},{"ruleId":"153","severity":1,"message":"186","line":14,"column":11,"nodeType":"155","messageId":"156","endLine":14,"endColumn":16},{"ruleId":"153","severity":1,"message":"187","line":15,"column":13,"nodeType":"155","messageId":"156","endLine":15,"endColumn":19},{"ruleId":"153","severity":1,"message":"161","line":1,"column":31,"nodeType":"155","messageId":"156","endLine":1,"endColumn":40},{"ruleId":"153","severity":1,"message":"188","line":3,"column":16,"nodeType":"155","messageId":"156","endLine":3,"endColumn":24},{"ruleId":"153","severity":1,"message":"189","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":14},{"ruleId":"153","severity":1,"message":"187","line":12,"column":13,"nodeType":"155","messageId":"156","endLine":12,"endColumn":19},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["190"],"no-negated-in-lhs",["191"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'ws' is defined but never used.","'client' is defined but never used.","'room' is defined but never used.","'makeConnection' is defined but never used.","'localConnection' is defined but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'useQueryCache' is defined but never used.","'ReactElement' is defined but never used.","'Router' is defined but never used.","'CREATE_SUFFIX' is assigned a value but never used.","no-useless-rename","Destructuring assignment vertCenter unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"192","text":"193"},["190"],["191"],"'makeVideoCall' is assigned a value but never used.","'getValues' is assigned a value but never used.","'cache' is assigned a value but never used.","'status' is assigned a value but never used.","'Redirect' is defined but never used.","'Flex' is defined but never used.","no-global-assign","no-unsafe-negation",[255,285],"vertCenter = false"]