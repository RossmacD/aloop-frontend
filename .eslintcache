[{"C:\\Users\\rossm\\chatapp\\src\\index.tsx":"1","C:\\Users\\rossm\\chatapp\\src\\style\\theme.ts":"2","C:\\Users\\rossm\\chatapp\\src\\components\\app\\App.tsx":"3","C:\\Users\\rossm\\chatapp\\src\\style\\colors.ts":"4","C:\\Users\\rossm\\chatapp\\src\\style\\fontFaces.ts":"5","C:\\Users\\rossm\\chatapp\\src\\utils\\sockets\\socket.ts":"6","C:\\Users\\rossm\\chatapp\\src\\routes\\Router.tsx":"7","C:\\Users\\rossm\\chatapp\\src\\routes\\Paths.ts":"8","C:\\Users\\rossm\\chatapp\\src\\pages\\templates\\CenteredPage.tsx":"9","C:\\Users\\rossm\\chatapp\\src\\pages\\templates\\ErrorPage.tsx":"10","C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\RegisterPage.tsx":"11","C:\\Users\\rossm\\chatapp\\src\\components\\video\\VideoCall.tsx":"12","C:\\Users\\rossm\\chatapp\\src\\components\\forms\\Auth\\RegisterForm.tsx":"13","C:\\Users\\rossm\\chatapp\\src\\utils\\validators\\passwordValidation.ts":"14","C:\\Users\\rossm\\chatapp\\src\\utils\\validators\\emailValidation.ts":"15","C:\\Users\\rossm\\chatapp\\src\\components\\forms\\template\\FormTemplate.tsx":"16","C:\\Users\\rossm\\chatapp\\src\\utils\\forms\\MakeForm.tsx":"17","C:\\Users\\rossm\\chatapp\\src\\utils\\text\\stringAsNestedSelector.ts":"18","C:\\Users\\rossm\\chatapp\\src\\utils\\text\\camelToSentence.ts":"19","C:\\Users\\rossm\\chatapp\\src\\config.ts":"20","C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\LoginPage.tsx":"21","C:\\Users\\rossm\\chatapp\\src\\api\\authQueries.ts":"22","C:\\Users\\rossm\\chatapp\\src\\api\\defaults.ts":"23","C:\\Users\\rossm\\chatapp\\src\\components\\forms\\Auth\\LoginForm.tsx":"24"},{"size":664,"mtime":1603472709113,"results":"25","hashOfConfig":"26"},{"size":1783,"mtime":1603472644016,"results":"27","hashOfConfig":"26"},{"size":888,"mtime":1607274127349,"results":"28","hashOfConfig":"26"},{"size":14702,"mtime":1603472643725,"results":"29","hashOfConfig":"26"},{"size":557,"mtime":1603472643822,"results":"30","hashOfConfig":"26"},{"size":3719,"mtime":1607215587242,"results":"31","hashOfConfig":"26"},{"size":1895,"mtime":1607382194157,"results":"32","hashOfConfig":"26"},{"size":176,"mtime":1607382201015,"results":"33","hashOfConfig":"26"},{"size":839,"mtime":1607205946848,"results":"34","hashOfConfig":"26"},{"size":1004,"mtime":1607205995915,"results":"35","hashOfConfig":"26"},{"size":436,"mtime":1607277908069,"results":"36","hashOfConfig":"26"},{"size":5334,"mtime":1607273400820,"results":"37","hashOfConfig":"26"},{"size":3081,"mtime":1607383091383,"results":"38","hashOfConfig":"26"},{"size":110,"mtime":1607275596172,"results":"39","hashOfConfig":"26"},{"size":128,"mtime":1607275575746,"results":"40","hashOfConfig":"26"},{"size":738,"mtime":1607275648643,"results":"41","hashOfConfig":"26"},{"size":1920,"mtime":1607275359046,"results":"42","hashOfConfig":"26"},{"size":661,"mtime":1607275308672,"results":"43","hashOfConfig":"26"},{"size":375,"mtime":1607275308668,"results":"44","hashOfConfig":"26"},{"size":279,"mtime":1607452262137,"results":"45","hashOfConfig":"26"},{"size":566,"mtime":1607448283697,"results":"46","hashOfConfig":"26"},{"size":808,"mtime":1607382879826,"results":"47","hashOfConfig":"26"},{"size":246,"mtime":1607382146566,"results":"48","hashOfConfig":"26"},{"size":2436,"mtime":1607448388958,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"3vs2uj",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rossm\\chatapp\\src\\index.tsx",["108"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { gsaTheme } from './style/theme';\nimport { Provider } from '@fluentui/react-northstar';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider theme={gsaTheme}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["109","110"],"C:\\Users\\rossm\\chatapp\\src\\style\\theme.ts",[],"C:\\Users\\rossm\\chatapp\\src\\components\\app\\App.tsx",["111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Button, Flex, Debug } from '@fluentui/react-northstar'\nimport { IconContext } from 'react-icons'\nimport { ws, client, room, makeConnection, localConnection } from '../../utils/sockets/socket';\nimport Router from '../../routes/Router'\nimport { useQuery, useMutation, useQueryCache, QueryCache, ReactQueryCacheProvider } from 'react-query'\n\nconst queryCache = new QueryCache()\n\nfunction App() {\n  return (\n    <ReactQueryCacheProvider queryCache={queryCache}>\n      <BrowserRouter>\n        <IconContext.Provider value={{ size: '1.25rem' }}>\n          <Flex column>\n            <Router />\n            <Debug />\n          </Flex>\n        </IconContext.Provider>\n      </BrowserRouter>\n    </ReactQueryCacheProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\rossm\\chatapp\\src\\style\\colors.ts",[],"C:\\Users\\rossm\\chatapp\\src\\style\\fontFaces.ts",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\sockets\\socket.ts",[],"C:\\Users\\rossm\\chatapp\\src\\routes\\Router.tsx",["124","125"],"import React, { ReactElement } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport RegisterPage from \"../pages/Auth/RegisterPage\";\r\nimport { LOGIN_PATH, REGISTER_PATH } from \"./Paths\";\r\nimport CenteredPage from \"../pages/templates/CenteredPage\";\r\nimport { VideoCall } from \"../components/video/VideoCall\";\r\nimport LoginPage from \"../pages/Auth/LoginPage\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n  // const [{ data: loginData }] = useGetOwnEmailQuery();\r\n\r\n  // const onlyLoggedIn = (page: ReactElement, alt: ReactElement = <Redirect to=\"/login\" />) => loginData?.getSelf?.email ? page : alt\r\n  // const onlyLoggedOut = (page: ReactElement, alt: ReactElement = <Redirect to=\"/\" />) => !loginData?.getSelf?.email ? page : alt\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <CenteredPage>\r\n          {/* {onlyLoggedIn(<Temp />, <h1>Welcome to Greenstar Aviation</h1>)} */}\r\n          <Link to={LOGIN_PATH}>Login</Link>\r\n          <Link to={REGISTER_PATH}>Register</Link>\r\n          <Link to='/video'>Video</Link>\r\n        </CenteredPage>\r\n      </Route>\r\n      <Route path={LOGIN_PATH}>\r\n        {/* {onlyLoggedOut(<LoginPage />)} */}\r\n        <LoginPage />\r\n      </Route>\r\n      <Route path={REGISTER_PATH}>\r\n        <RegisterPage />\r\n      </Route>\r\n      <Route path={\"/video\"}>\r\n        <CenteredPage>\r\n          <VideoCall />\r\n        </CenteredPage>\r\n      </Route>\r\n      {/* <Route path={PASS_RESET_PATH}>\r\n        {onlyLoggedOut(<ForgotPasswordPage />)}\r\n      </Route> */}\r\n      {/* <Route path={PASS_RESET_PATH + '/:token'}>\r\n        {onlyLoggedOut(<PasswordResetPage />)}\r\n      </Route> */}\r\n      <Route path=\"*\">\r\n        {/* <ErrorPage error={{ number: 404, message: \"Page not found\" }}></ErrorPage> */}\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}","C:\\Users\\rossm\\chatapp\\src\\routes\\Paths.ts",["126"],"export const LOGIN_PATH = '/login';\r\nexport const REGISTER_PATH = '/register';\r\nexport const PASS_RESET_PATH = '/register';\r\n\r\n// Crud suffixes\r\nconst CREATE_SUFFIX = '/new';\r\n","C:\\Users\\rossm\\chatapp\\src\\pages\\templates\\CenteredPage.tsx",["127","128","129"],"import React, { ReactElement } from 'react';\r\nimport { Button, Flex } from '@fluentui/react-northstar';\r\nimport { gsaTheme } from '../../style/theme';\r\n\r\ninterface Props {\r\n    vertCenter?: boolean\r\n}\r\n\r\nconst CenteredPage: React.FC<Props> = ({ children, vertCenter: vertCenter = false }) => (\r\n    <Flex styles={{ height: '100vh', overflowY: 'scroll', width: '100%', justifyContent: 'center', backgroundColor: gsaTheme.siteVariables.colors.grey[200] }}>\r\n        <Flex styles={{ minHeight: '80vh', height: 'fit-content', justifyContent: vertCenter ? 'center' : 'flex-start', alignItems: 'center', flexDirection: 'column', margin: '10vh 2rem', padding: '2rem', backgroundColor: gsaTheme.siteVariables.colors.white, width: 'min( 50rem, 100%)' }}>\r\n            {children}\r\n        </Flex>\r\n    </Flex>\r\n);\r\n\r\n\r\nexport default CenteredPage;\r\n","C:\\Users\\rossm\\chatapp\\src\\pages\\templates\\ErrorPage.tsx",["130"],"import React, { ReactElement } from 'react';\r\nimport { Button, Flex } from '@fluentui/react-northstar';\r\nimport { gsaTheme } from '../../style/theme';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface ErrorPageProps {\r\n    error: {\r\n        number: number;\r\n        message: string;\r\n    }\r\n}\r\n\r\nconst ErrorPage: React.FC<ErrorPageProps> = ({ error }) => (\r\n    <Flex styles={{ minHeight: '100vh', width: '100%', justifyContent: 'center', backgroundColor: gsaTheme.siteVariables.colors.grey[300] }}>\r\n        <Flex style={{ fontSize: '15rem', justifyContent: 'center', alignItems: 'center' }}>🤯</Flex>\r\n        <Flex styles={{ justifyContent: 'center', alignItems: 'center', flexDirection: 'column', margin: '10vh 2rem', padding: '2rem' }}>\r\n            <h1 style={{ fontSize: '6rem', fontWeight: 700 }}>{error.number}</h1>\r\n            <h1>{error.message}</h1>\r\n            <Button as={Link} to='/' primary >Take me Home</Button>\r\n        </Flex>\r\n    </Flex >\r\n);\r\n\r\n\r\nexport default ErrorPage;",["131","132"],"C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\RegisterPage.tsx",[],"C:\\Users\\rossm\\chatapp\\src\\components\\video\\VideoCall.tsx",["133"],"import { Button } from '@fluentui/react-northstar'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { makeConnection, localConnection, client } from '../../utils/sockets/socket';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nexport const VideoCall: React.FC<Props> = ({ children }) => {\r\n    const videoRef = useRef<HTMLVideoElement>(null);\r\n    const incomingVidRef = useRef<HTMLVideoElement>(null);\r\n    // const [streamOut, setStream] = useState<MediaStream>()\r\n    const [inCall, setInCall] = useState(false)\r\n    const [callMessage, setCallMessage] = useState<string>(\"\")\r\n\r\n    const signalConnect = () => {\r\n        setInCall(true)\r\n        if (makeConnection()) {\r\n\r\n        } else {\r\n            setInCall(false)\r\n            console.log(\"Could not connect\")\r\n            setCallMessage(\"Could not connect\")\r\n        }\r\n    }\r\n\r\n    const pipeErr = (err: Error) => { throw err }\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ audio: false, video: true })\r\n            .then((stream) => {\r\n                if (videoRef?.current) {\r\n                    videoRef.current.srcObject = stream\r\n                    localConnection.ontrack = gotRemoteStream;\r\n                    stream.getTracks().forEach(track => localConnection.addTrack(track, stream));\r\n                    // setStream(stream)\r\n                    // makeVideoCall(stream)\r\n                }\r\n            }).catch((err) => console.error(`Error getting media device`, err));\r\n    }, [videoRef])\r\n\r\n    const canPlay = () => {\r\n        if (videoRef?.current) { videoRef.current.play() }\r\n    }\r\n\r\n    const gotRemoteStream = (e: any) => {\r\n        if (incomingVidRef?.current && incomingVidRef?.current?.srcObject !== e.streams[0]) {\r\n            incomingVidRef.current.srcObject = e.streams[0];\r\n            // console.log('pc2 received remote stream');\r\n        }\r\n    }\r\n\r\n\r\n    const makeVideoCall = (stream: MediaStream) => {\r\n        const localConnection = new RTCPeerConnection();\r\n        const remoteConnection = new RTCPeerConnection();\r\n\r\n        // Add Ice Candidate when created\r\n        localConnection.onicecandidate = (iceEvent) => {\r\n            // console.log('LocalConnection : Adding Candidate', iceEvent.candidate)\r\n            if (iceEvent.candidate) remoteConnection.addIceCandidate(iceEvent.candidate)\r\n        }\r\n        // localConnection.oniceconnectionstatechange = (stateChangeEvent) => console.log('localConnection state Change ', stateChangeEvent)\r\n\r\n        // Add Ice Candidate when created\r\n        remoteConnection.onicecandidate = (iceEvent) => {\r\n            // console.log('RemoteConnection : Adding Candidate', iceEvent.candidate)\r\n            if (iceEvent.candidate) localConnection.addIceCandidate(iceEvent.candidate)\r\n        }\r\n        // remoteConnection.oniceconnectionstatechange = (stateChangeEvent) => console.log('remote state Change', stateChangeEvent)\r\n\r\n        remoteConnection.addEventListener('track', gotRemoteStream);\r\n\r\n        stream.getTracks().forEach(track => localConnection.addTrack(track, stream));\r\n        console.log('Added stream to local');\r\n\r\n        // Create an offer to connect (Sets up the terms for the call)\r\n        localConnection.createOffer({ offerToReceiveVideo: true }).then(async (offer) => {\r\n            // console.log(`Offer from local\\n${offer.sdp}`);\r\n            // Set the description of tye call on the local PC\r\n            // console.log('local setLocalDescription start');\r\n            await localConnection.setLocalDescription(offer).catch(pipeErr)\r\n            // console.log(`remote setRemoteDescription start`);\r\n            // Set the description of the call on the remote PC\r\n            await remoteConnection.setRemoteDescription(offer).catch(pipeErr)\r\n            // Remote PC answers local\r\n            console.log(\"creating answer\")\r\n            const answer = await remoteConnection.createAnswer().catch(pipeErr)\r\n            // console.log(`Answer from remote:\\n${offer.sdp}`);\r\n            // Set the description of the answer to the call remote\r\n            // console.log('remote setLocalDescription start');\r\n            await remoteConnection.setLocalDescription(answer).catch(pipeErr)\r\n            // Set the description of the answer to the call on local\r\n            // console.log('local setRemoteDescription start');\r\n            await localConnection.setRemoteDescription(answer).catch(pipeErr)\r\n        })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ position: \"relative\" }}>\r\n                <video ref={videoRef} onCanPlay={canPlay} id=\"player\" autoPlay playsInline muted width=\"426\" height=\"240\" />\r\n                <p style={{ position: \"absolute\", color: 'white', top: 10, left: 10 }}>Your Name: {client}</p>\r\n            </div>\r\n            {inCall ? (\r\n                <div style={{ position: \"relative\" }}>\r\n                    <video ref={incomingVidRef} playsInline autoPlay width=\"426\" height=\"240\"></video>\r\n                    <p style={{ position: \"absolute\", color: 'white', top: 10, left: 10 }}>Caller Name: {'caller'}</p>\r\n                </div>) : ''\r\n            }\r\n            <p>{callMessage}</p>\r\n            <Button content=\"Join Room\" primary onClick={() => signalConnect()} disabled={inCall} />\r\n        </div>\r\n    )\r\n}","C:\\Users\\rossm\\chatapp\\src\\components\\forms\\Auth\\RegisterForm.tsx",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\validators\\passwordValidation.ts",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\validators\\emailValidation.ts",[],"C:\\Users\\rossm\\chatapp\\src\\components\\forms\\template\\FormTemplate.tsx",["134","135"],"import React, { ReactElement, useState } from 'react'\r\nimport { ComponentEventHandler, Form, FormProps } from '@fluentui/react-northstar'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    onSubmit?: ComponentEventHandler<FormProps>\r\n    success?: boolean,\r\n    fetching?: boolean\r\n    to?: string\r\n}\r\n\r\nexport const FormTemplate: React.FC<Props> = ({ children, onSubmit, success, fetching, to = '/' }) => {\r\n    return success ? <Redirect to={to} /> : (\r\n        <Form onSubmit={onSubmit} styles={{ justifyContent: 'start', width: 'auto', margin: '1rem 2rem' }}>\r\n            {children}\r\n            <Form.Button content=\"Submit\" loading={fetching} disabled={fetching} fluid primary />\r\n        </Form>\r\n    )\r\n}\r\n\r\n","C:\\Users\\rossm\\chatapp\\src\\utils\\forms\\MakeForm.tsx",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\text\\stringAsNestedSelector.ts",[],"C:\\Users\\rossm\\chatapp\\src\\utils\\text\\camelToSentence.ts",[],"C:\\Users\\rossm\\chatapp\\src\\config.ts",[],"C:\\Users\\rossm\\chatapp\\src\\pages\\Auth\\LoginPage.tsx",[],"C:\\Users\\rossm\\chatapp\\src\\api\\authQueries.ts",[],"C:\\Users\\rossm\\chatapp\\src\\api\\defaults.ts",[],"C:\\Users\\rossm\\chatapp\\src\\components\\forms\\Auth\\LoginForm.tsx",["136"],{"ruleId":"137","severity":1,"message":"138","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":23},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"137","severity":1,"message":"145","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"146","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":35},{"ruleId":"137","severity":1,"message":"147","line":1,"column":37,"nodeType":"139","messageId":"140","endLine":1,"endColumn":43},{"ruleId":"137","severity":1,"message":"148","line":1,"column":45,"nodeType":"139","messageId":"140","endLine":1,"endColumn":53},{"ruleId":"137","severity":1,"message":"149","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":16},{"ruleId":"137","severity":1,"message":"150","line":6,"column":10,"nodeType":"139","messageId":"140","endLine":6,"endColumn":12},{"ruleId":"137","severity":1,"message":"151","line":6,"column":14,"nodeType":"139","messageId":"140","endLine":6,"endColumn":20},{"ruleId":"137","severity":1,"message":"152","line":6,"column":22,"nodeType":"139","messageId":"140","endLine":6,"endColumn":26},{"ruleId":"137","severity":1,"message":"153","line":6,"column":28,"nodeType":"139","messageId":"140","endLine":6,"endColumn":42},{"ruleId":"137","severity":1,"message":"154","line":6,"column":44,"nodeType":"139","messageId":"140","endLine":6,"endColumn":59},{"ruleId":"137","severity":1,"message":"155","line":8,"column":10,"nodeType":"139","messageId":"140","endLine":8,"endColumn":18},{"ruleId":"137","severity":1,"message":"156","line":8,"column":20,"nodeType":"139","messageId":"140","endLine":8,"endColumn":31},{"ruleId":"137","severity":1,"message":"157","line":8,"column":33,"nodeType":"139","messageId":"140","endLine":8,"endColumn":46},{"ruleId":"137","severity":1,"message":"158","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":29},{"ruleId":"137","severity":1,"message":"159","line":3,"column":20,"nodeType":"139","messageId":"140","endLine":3,"endColumn":26},{"ruleId":"137","severity":1,"message":"160","line":6,"column":7,"nodeType":"139","messageId":"140","endLine":6,"endColumn":20},{"ruleId":"137","severity":1,"message":"158","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":29},{"ruleId":"137","severity":1,"message":"149","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":9,"column":52,"nodeType":"163","messageId":"164","endLine":9,"endColumn":82,"fix":"165"},{"ruleId":"137","severity":1,"message":"158","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":29},{"ruleId":"141","replacedBy":"166"},{"ruleId":"143","replacedBy":"167"},{"ruleId":"137","severity":1,"message":"168","line":54,"column":11,"nodeType":"139","messageId":"140","endLine":54,"endColumn":24},{"ruleId":"137","severity":1,"message":"158","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":29},{"ruleId":"137","severity":1,"message":"148","line":1,"column":31,"nodeType":"139","messageId":"140","endLine":1,"endColumn":39},{"ruleId":"137","severity":1,"message":"169","line":19,"column":66,"nodeType":"139","messageId":"140","endLine":19,"endColumn":75},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'ws' is defined but never used.","'client' is defined but never used.","'room' is defined but never used.","'makeConnection' is defined but never used.","'localConnection' is defined but never used.","'useQuery' is defined but never used.","'useMutation' is defined but never used.","'useQueryCache' is defined but never used.","'ReactElement' is defined but never used.","'Router' is defined but never used.","'CREATE_SUFFIX' is assigned a value but never used.","no-useless-rename","Destructuring assignment vertCenter unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"172","text":"173"},["170"],["171"],"'makeVideoCall' is assigned a value but never used.","'getValues' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[255,285],"vertCenter = false"]