[{"/home/rmdadmin/Docs/aloop-frontend/src/index.tsx":"1","/home/rmdadmin/Docs/aloop-frontend/src/style/theme.ts":"2","/home/rmdadmin/Docs/aloop-frontend/src/components/app/App.tsx":"3","/home/rmdadmin/Docs/aloop-frontend/src/style/fontFaces.ts":"4","/home/rmdadmin/Docs/aloop-frontend/src/style/colors.ts":"5","/home/rmdadmin/Docs/aloop-frontend/src/components/app/authReducer.ts":"6","/home/rmdadmin/Docs/aloop-frontend/src/components/app/SocketProvider.tsx":"7","/home/rmdadmin/Docs/aloop-frontend/src/routes/Router.tsx":"8","/home/rmdadmin/Docs/aloop-frontend/src/utils/sockets/socketTemp.tsx":"9","/home/rmdadmin/Docs/aloop-frontend/src/pages/VideoPage.tsx":"10","/home/rmdadmin/Docs/aloop-frontend/src/routes/Paths.ts":"11","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/ProfilePage.tsx":"12","/home/rmdadmin/Docs/aloop-frontend/src/pages/HomePage.tsx":"13","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/LoginPage.tsx":"14","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/RegisterPage.tsx":"15","/home/rmdadmin/Docs/aloop-frontend/src/api/authQueries.ts":"16","/home/rmdadmin/Docs/aloop-frontend/src/pages/templates/CenteredPage.tsx":"17","/home/rmdadmin/Docs/aloop-frontend/src/components/forms/Auth/LoginForm.tsx":"18","/home/rmdadmin/Docs/aloop-frontend/src/components/forms/Auth/RegisterForm.tsx":"19","/home/rmdadmin/Docs/aloop-frontend/src/api/defaults.ts":"20","/home/rmdadmin/Docs/aloop-frontend/src/config.ts":"21","/home/rmdadmin/Docs/aloop-frontend/src/utils/validators/passwordValidation.ts":"22","/home/rmdadmin/Docs/aloop-frontend/src/utils/validators/emailValidation.ts":"23","/home/rmdadmin/Docs/aloop-frontend/src/components/forms/template/FormTemplate.tsx":"24","/home/rmdadmin/Docs/aloop-frontend/src/utils/forms/MakeForm.tsx":"25","/home/rmdadmin/Docs/aloop-frontend/src/utils/text/stringAsNestedSelector.ts":"26","/home/rmdadmin/Docs/aloop-frontend/src/utils/text/camelToSentence.ts":"27","/home/rmdadmin/Docs/aloop-frontend/src/style/icons.ts":"28","/home/rmdadmin/Docs/aloop-frontend/src/api/videoQueries.ts":"29","/home/rmdadmin/Docs/aloop-frontend/src/utils/MakeAction.tsx":"30","/home/rmdadmin/Docs/aloop-frontend/src/components/video/VideoCall.tsx":"31","/home/rmdadmin/Docs/aloop-frontend/src/components/video/VideoPanel.tsx":"32","/home/rmdadmin/Docs/aloop-frontend/src/utils/useRefCallback.tsx":"33","/home/rmdadmin/Docs/aloop-frontend/src/api/messageQueries.ts":"34","/home/rmdadmin/Docs/aloop-frontend/src/components/chat/ChatWindow.tsx":"35"},{"size":664,"mtime":1613574076861,"results":"36","hashOfConfig":"37"},{"size":1704,"mtime":1613574076861,"results":"38","hashOfConfig":"37"},{"size":1519,"mtime":1615387218625,"results":"39","hashOfConfig":"37"},{"size":532,"mtime":1613574076861,"results":"40","hashOfConfig":"37"},{"size":14223,"mtime":1613574076861,"results":"41","hashOfConfig":"37"},{"size":1336,"mtime":1616420633430,"results":"42","hashOfConfig":"37"},{"size":972,"mtime":1616433726680,"results":"43","hashOfConfig":"37"},{"size":1915,"mtime":1616422038310,"results":"44","hashOfConfig":"37"},{"size":11484,"mtime":1616791569440,"results":"45","hashOfConfig":"37"},{"size":4975,"mtime":1616792381230,"results":"46","hashOfConfig":"37"},{"size":282,"mtime":1613574076861,"results":"47","hashOfConfig":"37"},{"size":996,"mtime":1613574076861,"results":"48","hashOfConfig":"37"},{"size":1667,"mtime":1615328168877,"results":"49","hashOfConfig":"37"},{"size":550,"mtime":1613574076861,"results":"50","hashOfConfig":"37"},{"size":423,"mtime":1613574076861,"results":"51","hashOfConfig":"37"},{"size":1787,"mtime":1616788399630,"results":"52","hashOfConfig":"37"},{"size":821,"mtime":1613574076861,"results":"53","hashOfConfig":"37"},{"size":3023,"mtime":1615399343925,"results":"54","hashOfConfig":"37"},{"size":3049,"mtime":1614634992640,"results":"55","hashOfConfig":"37"},{"size":425,"mtime":1614632598150,"results":"56","hashOfConfig":"37"},{"size":822,"mtime":1615335566897,"results":"57","hashOfConfig":"37"},{"size":105,"mtime":1613574076871,"results":"58","hashOfConfig":"37"},{"size":123,"mtime":1613574076871,"results":"59","hashOfConfig":"37"},{"size":729,"mtime":1616425271590,"results":"60","hashOfConfig":"37"},{"size":1909,"mtime":1616425241510,"results":"61","hashOfConfig":"37"},{"size":645,"mtime":1613574076871,"results":"62","hashOfConfig":"37"},{"size":363,"mtime":1613574076871,"results":"63","hashOfConfig":"37"},{"size":2244,"mtime":1616695111920,"results":"64","hashOfConfig":"37"},{"size":706,"mtime":1614634425630,"results":"65","hashOfConfig":"37"},{"size":203,"mtime":1616431015700,"results":"66","hashOfConfig":"37"},{"size":6089,"mtime":1616620516000,"results":"67","hashOfConfig":"37"},{"size":545,"mtime":1616602035553,"results":"68","hashOfConfig":"37"},{"size":717,"mtime":1616596105253,"results":"69","hashOfConfig":"37"},{"size":2337,"mtime":1616763714432,"results":"70","hashOfConfig":"37"},{"size":3452,"mtime":1616790090510,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"9ozt8e",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"114","usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"75"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"75"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"75"},"/home/rmdadmin/Docs/aloop-frontend/src/index.tsx",["158"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { gsaTheme } from './style/theme';\nimport { Provider } from '@fluentui/react-northstar';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider theme={gsaTheme}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["159","160"],"/home/rmdadmin/Docs/aloop-frontend/src/style/theme.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/app/App.tsx",["161"],"import React, { createContext, useReducer } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Button, Flex, Debug } from '@fluentui/react-northstar'\nimport { IconContext } from 'react-icons'\n// import { ws, client, room, makeConnection, localConnection } from '../../utils/sockets/socket';\nimport Router from '../../routes/Router'\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport { authReducer, UserAuthContext } from './authReducer';\nimport { SocketProvider } from './SocketProvider'\n// The query client for react fetch\nexport const queryClient = new QueryClient()\n\n// The Context for global Auth state (Context API)\nexport const AuthUserContext = createContext<typeof undefined | UserAuthContext>(undefined);\n\nfunction App() {\n  const [selfState, dispatch] = useReducer(authReducer, {\n    auth: false,\n    user: null\n  })\n  return (\n    <AuthUserContext.Provider value={{ selfState, dispatch }}>\n      <SocketProvider>\n        <QueryClientProvider client={queryClient}>\n          <ReactQueryDevtools initialIsOpen={false} />\n          <BrowserRouter>\n            <IconContext.Provider value={{ size: '1.25rem' }}>\n              <Flex column>\n                <Router />\n                <Debug />\n              </Flex>\n            </IconContext.Provider>\n          </BrowserRouter>\n        </QueryClientProvider>\n      </SocketProvider>\n    </AuthUserContext.Provider>\n  );\n}\n\nexport default App;\n","/home/rmdadmin/Docs/aloop-frontend/src/style/fontFaces.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/style/colors.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/app/authReducer.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/app/SocketProvider.tsx",["162"],"import React, { createContext, useContext, useRef } from 'react'\nimport { RTCSocket } from '../../utils/sockets/socketTemp';\nimport { Option } from '../../utils/types'\n\ninterface Props {\n\n}\n\ninterface SocketApiContext {\n    socket: Option<React.MutableRefObject<Option<RTCSocket>>>,\n    connectWebsocket: (user_id: number) => void\n\n}\n\nexport const SocketContext = createContext<SocketApiContext>({ socket: undefined, connectWebsocket: () => { } })\n\nexport const SocketProvider: React.FC<Props> = ({ children }) => {\n    const socket = useRef<Option<RTCSocket>>(undefined);\n    const connectWebsocket = (user_id: number) => {\n        if ((!socket.current || socket.current?.ws.readyState === WebSocket.CLOSED)) {\n            // Connect\n            socket.current = new RTCSocket(user_id).setSocketHandlers();\n        }\n    }\n\n    return (\n        <SocketContext.Provider value={{ socket, connectWebsocket }}>\n            {children}\n        </SocketContext.Provider>\n    )\n}","/home/rmdadmin/Docs/aloop-frontend/src/routes/Router.tsx",["163","164","165","166","167","168"],"import React, { ReactElement } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport RegisterPage from \"../pages/Auth/RegisterPage\";\nimport { LOGIN_PATH, REGISTER_PATH } from \"./Paths\";\nimport CenteredPage from \"../pages/templates/CenteredPage\";\nimport { VideoCall } from \"../components/video/VideoCall\";\nimport LoginPage from \"../pages/Auth/LoginPage\";\nimport { HomePage } from \"../pages/HomePage\";\nimport ProfilePage from \"../pages/Auth/ProfilePage\";\nimport { VideoRooms } from \"../components/video/VideoRooms\";\nimport { SidePanel } from '../components/video/SidePanel';\nimport { VideoPage } from \"../pages/VideoPage\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () => {\n  // const [{ data: loginData }] = useGetOwnEmailQuery();\n\n  // const onlyLoggedIn = (page: ReactElement, alt: ReactElement = <Redirect to=\"/login\" />) => loginData?.getSelf?.email ? page : alt\n  // const onlyLoggedOut = (page: ReactElement, alt: ReactElement = <Redirect to=\"/\" />) => !loginData?.getSelf?.email ? page : alt\n\n  // const self = useGetSelfQuery();\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <HomePage />\n      </Route>\n      <Route path={LOGIN_PATH}>\n        {/* {onlyLoggedOut(<LoginPage />)} */}\n        <LoginPage />\n      </Route>\n      <Route path={REGISTER_PATH}>\n        <RegisterPage />\n      </Route>\n      <Route path={\"/video\"}>\n        <VideoPage />\n      </Route>\n      <Route path={\"/profile\"}>\n        <ProfilePage />\n      </Route>\n      {/* <Route path={PASS_RESET_PATH}>\n        {onlyLoggedOut(<ForgotPasswordPage />)}\n      </Route> */}\n      {/* <Route path={PASS_RESET_PATH + '/:token'}>\n        {onlyLoggedOut(<PasswordResetPage />)}\n      </Route> */}\n      <Route path=\"*\">\n        {/* <ErrorPage error={{ number: 404, message: \"Page not found\" }}></ErrorPage> */}\n      </Route>\n    </Switch>\n  )\n}","/home/rmdadmin/Docs/aloop-frontend/src/utils/sockets/socketTemp.tsx",["169","170"],"/home/rmdadmin/Docs/aloop-frontend/src/pages/VideoPage.tsx",["171","172","173","174","175","176","177","178","179","180","181","182"],"/home/rmdadmin/Docs/aloop-frontend/src/routes/Paths.ts",["183"],"export const LOGIN_PATH = '/login';\nexport const REGISTER_PATH = '/register';\nexport const PASS_RESET_PATH = '/register';\nexport const SELF_PATH = `/self`;\nexport const USER_PATH = '/user';\n\nexport const USERS_PATH = `${USER_PATH}s`;\n\n// Crud suffixes\nconst CREATE_SUFFIX = '/new';\n","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/ProfilePage.tsx",["184","185","186","187"],"import React, { ReactElement, useEffect } from 'react';\nimport CenteredPage from '../templates/CenteredPage';\nimport { Link, Redirect } from 'react-router-dom';\nimport { LOGIN_PATH, } from '../../routes/Paths';\nimport { useGetSelfQuery } from '../../api/authQueries';\nimport { Flex, Loader, Text } from '@fluentui/react-northstar'\n\nconst ProfilePage = (): ReactElement => {\n    // const authenticated = false\n\n    // const cache = useQueryCache();\n    const { status, data, error, isFetching } = useGetSelfQuery();\n\n    return isFetching ? (<Loader />) : !error ?\n        (\n            <CenteredPage>\n                <h1>Welcome {data.email}</h1>\n            </CenteredPage>\n        )\n        : (\n            // <Redirect to={LOGIN_PATH} />\n            <CenteredPage>\n                <Text error>{typeof error === \"string\" ? error : \"Authentication Error: Timeout\"}</Text>\n                <Link to={LOGIN_PATH}>Login</Link>\n            </CenteredPage>\n        )\n\n\n}\n\n\nexport default ProfilePage;\n","/home/rmdadmin/Docs/aloop-frontend/src/pages/HomePage.tsx",["188"],"import { Flex, Loader, Text } from '@fluentui/react-northstar'\nimport React, { useContext } from 'react'\nimport { useQueryClient } from 'react-query'\nimport { Link } from 'react-router-dom'\nimport { useGetUsers } from '../api/authQueries'\nimport { AuthUserContext } from '../components/app/App'\nimport { LOGIN_PATH, REGISTER_PATH } from '../routes/Paths'\nimport CenteredPage from './templates/CenteredPage'\n\ninterface Props {\n\n}\n\nexport const HomePage: React.FC<Props> = ({ children }) => {\n    // const cache = useQueryClient();\n    const { data, error, isFetching } = useGetUsers();\n    const authcontext = useContext(AuthUserContext)\n\n\n    return (\n        <CenteredPage>\n            {/* {onlyLoggedIn(<Temp />, <h1>Welcome to Greenstar Aviation</h1>)} */}\n            <Flex styles={{ width: \"100%\", justifyContent: \"space-evenly\", margin: '2rem 10rem' }}>\n                {!authcontext?.selfState?.auth ?\n                    <>\n                        <Link to={LOGIN_PATH}>Login</Link>\n                        <Link to={REGISTER_PATH}>Register</Link>\n                    </> :\n                    <>\n                        <Link to='/video'>Video</Link>\n                        <Link to='/profile'>Profile</Link>\n                    </>}\n            </Flex>\n            <Text content=\"Users:\" size=\"largest\" weight=\"bold\" />\n            {\n                isFetching ?\n                    (<Loader />) :\n                    (error ? (<Text content=\"Error retrieving users\" error />) : (\n                        data.map((user: any) => (<Text content={user.first_name} key={user.user_id} />))\n                    ))\n            }\n\n\n        </CenteredPage>\n    )\n}","/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/LoginPage.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/pages/Auth/RegisterPage.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/api/authQueries.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/pages/templates/CenteredPage.tsx",["189","190","191"],"import React, { ReactElement } from 'react';\nimport { Button, Flex } from '@fluentui/react-northstar';\nimport { gsaTheme } from '../../style/theme';\n\ninterface Props {\n    vertCenter?: boolean\n}\n\nconst CenteredPage: React.FC<Props> = ({ children, vertCenter: vertCenter = false }) => (\n    <Flex styles={{ height: '100vh', overflowY: 'scroll', width: '100%', justifyContent: 'center', backgroundColor: gsaTheme.siteVariables.colors.grey[200] }}>\n        <Flex styles={{ minHeight: '80vh', height: 'fit-content', justifyContent: vertCenter ? 'center' : 'flex-start', alignItems: 'center', flexDirection: 'column', margin: '10vh 2rem', padding: '2rem', backgroundColor: gsaTheme.siteVariables.colors.white, width: 'min( 50rem, 100%)' }}>\n            {children}\n        </Flex>\n    </Flex>\n);\n\n\nexport default CenteredPage;\n","/home/rmdadmin/Docs/aloop-frontend/src/components/forms/Auth/LoginForm.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/forms/Auth/RegisterForm.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/api/defaults.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/config.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/utils/validators/passwordValidation.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/utils/validators/emailValidation.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/forms/template/FormTemplate.tsx",["192","193"],"import React, { ReactElement, useState } from 'react'\nimport { ComponentEventHandler, Form, FormButton, FormProps } from '@fluentui/react-northstar'\nimport { Redirect } from 'react-router-dom';\n\ninterface Props {\n    onSubmit?: ComponentEventHandler<FormProps>\n    success?: boolean,\n    fetching?: boolean\n    to?: string\n}\n\nexport const FormTemplate: React.FC<Props> = ({ children, onSubmit, success, fetching, to = '/' }) => {\n    return success ? <Redirect to={to} /> : (\n        <Form onSubmit={onSubmit} styles={{ justifyContent: 'start', width: 'auto', margin: '1rem 2rem' }}>\n            {children}\n            <FormButton content=\"Submit\" loading={fetching} disabled={fetching} fluid primary />\n        </Form>\n    )\n}\n\n","/home/rmdadmin/Docs/aloop-frontend/src/utils/forms/MakeForm.tsx",["194"],"import React, { RefObject } from 'react'\nimport { Form, FormInput } from \"@fluentui/react-northstar\"\nimport { DeepMap } from 'react-hook-form/dist/types/utils'\nimport { FieldError } from 'react-hook-form'\nimport { FormStateProxy } from 'react-hook-form/dist/types/form'\nimport { stringAsNestedSelector } from '../text/stringAsNestedSelector'\nimport { camel2Sentence } from '../text/camelToSentence'\n\n\n\n\nexport interface ShorthandField {\n    id: string,\n    label?: string,\n    type?: string,\n    validation?: Rules,\n}\n\n\nexport interface Rules {\n    required?: string | boolean\n    maxLength?: number,\n    minLength?: number,\n    pattern?: RegExp,\n    validate?: (value: string) => boolean | string\n}\n\n\n\n// Turn an array into a validated form - the form generated will be validated with react hook forms\nexport const MakeForm = (fields: ShorthandField[], errors: DeepMap<Record<string, any>, FieldError>, register: (rules: Rules) => ((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | null | undefined, formState: FormStateProxy<Record<string, any>>) => {\n    const form = []\n    for (const field of fields) {\n        const humanLabel = field.label || camel2Sentence(field.id)\n        // PERFORMANCE??? - this only needs to be done for dynamic forms, good place to look at performance if slow\n        const error = stringAsNestedSelector<typeof errors>(errors, field.id);\n        const touched = stringAsNestedSelector<typeof formState.touched>(formState.touched, field.id);\n        form.push(<FormInput\n            label={humanLabel}\n            id={field.id}\n            key={field.id}\n            name={field.id}\n            type={field?.type}\n            ref={register(field?.validation || {})}\n            errorMessage={error && (error.message || \"Please input a valid \" + humanLabel)}\n            showSuccessIndicator={!error && touched\n            } />)\n    }\n    return form\n}","/home/rmdadmin/Docs/aloop-frontend/src/utils/text/stringAsNestedSelector.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/utils/text/camelToSentence.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/style/icons.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/api/videoQueries.ts",["195","196"],"import { useMutation, useQuery } from 'react-query';\nimport { getFetch, postFetch } from './defaults';\n\nconst VIDEO_CHANNEL_CACHE_KEY = 'video_channel';\n\nexport interface VideoChannelRes {\n  video_channel_id: number;\n  channel_name: string;\n  created_at: string;\n}\n\nconst getVideoChannels = async () =>\n  getFetch('/vidchan')\n    .then((res) => {\n      console.log(res);\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw new Error('Authentication Error');\n      }\n    })\n    .catch((e) => {\n      console.error('POST REQUEST ERROR', e);\n      throw e;\n    });\n\nexport const useGetVideoChannelQuery = () =>\n  useQuery<VideoChannelRes[]>(VIDEO_CHANNEL_CACHE_KEY, getVideoChannels);\n","/home/rmdadmin/Docs/aloop-frontend/src/utils/MakeAction.tsx",["197"],"import React, { useState } from 'react'\n\nexport const makeAction = (Component: any, props: any) => {\n    const { action, ...restProps } = props;\n    return <Component {...restProps} onClick={action} />\n}","/home/rmdadmin/Docs/aloop-frontend/src/components/video/VideoCall.tsx",["198","199","200","201","202"],"import { Button, Grid } from '@fluentui/react-northstar'\nimport React, { useEffect, useRef, useState, useContext } from 'react'\nimport { useRefArrayCallback } from '../../utils/useRefCallback';\nimport { AuthUserContext } from '../app/App';\nimport { SocketContext } from '../app/SocketProvider';\nimport { VideoPanel } from './VideoPanel';\n// import { makeConnection, localConnection, client } from '../../utils/sockets/socket';!!!\n\ninterface Props {\n    selectedRoom: String | undefined\n}\n\nexport const VideoCall: React.FC<Props> = ({ children, selectedRoom }) => {\n    const authcontext = useContext(AuthUserContext)\n    const videoRef = useRef<HTMLVideoElement>(null);\n    const [incomingVidRef, setIncomingVidRef] = useRefArrayCallback<HTMLVideoElement>(\n        (vidRef) => {\n            if (vidRef.current) {\n                console.log(\"processing vidref\");\n                processVidRef(vidRef)\n            } else {\n                console.error(\"No process bruh\")\n            }\n        },\n        (vidRef) => {\n            //Drop connections\n        },\n        []);\n    // const [streamOut, setStream] = useState<MediaStream>()\n    const [inCall, setInCall] = useState(false);\n    const [callMessage, setCallMessage] = useState<string>(\"\")\n    const [callMembers, setCallMembers] = useState<number[]>([])\n    interface QMSG {\n        e: any,\n        id: number\n    }\n    const [vidQueue, setVidQueue] = useState<QMSG[]>([])\n\n\n    const socketContext = useContext(SocketContext)\n\n\n    const joinRoom = (room: String) => {\n        console.log(\"Joining Call\")\n        setInCall(true)\n        if (socketContext?.socket?.current?.makeConnection(room, setCallMembers)) {\n            console.log(\"Connected!\")\n        } else {\n            setInCall(false)\n            console.log(\"Could not connect\")\n            setCallMessage(\"Could not connect\")\n        }\n    }\n\n    const pipeErr = (err: Error) => { throw err }\n\n    useEffect(() => {\n        // console.log(navigator.mediaDevices.getUserMedia({ audio: false, video: true }).then)\n        if (!navigator.mediaDevices?.getUserMedia({ audio: false, video: true })\n            .then((stream) => {\n                // console.log(\"Stream\")\n                if (videoRef?.current) {\n                    videoRef.current.srcObject = stream\n                    console.log(\"Adding Stream\", socketContext?.socket?.current)\n                    // socketContext?.socket?.current?.localConnection.ontrack = gotRemoteStream;\n                    socketContext?.socket?.current?.setTracks(gotRemoteStream, stream)\n                    // stream.getTracks().forEach(track => localConnection.addTrack(track, stream));\n                    //! setStream(stream)\n                    // !makeVideoCall(stream)\n                } else {\n                    // console.log(\"oh nowy\")\n                }\n            }).catch((err) => console.error(`Error getting media device`, err))) {\n            // There are no media devices\n            setCallMessage(\"No media devices found, is your camera / microphone connected?\")\n        } else {\n            // console.log(\"noVideo\")\n        };\n    }, [videoRef])\n\n    const canPlay = () => {\n        if (videoRef?.current) { videoRef.current.play() }\n    }\n\n    const gotRemoteStream = (e: any, id: number) => {\n        console.log(\"GOT reomte\", e)\n        if (incomingVidRef?.current && incomingVidRef.current[id] && incomingVidRef.current[id]?.srcObject !== e.streams[0]) {\n            incomingVidRef.current[id].srcObject = e.streams[0];\n        } else {\n            console.log(\"Adding to queue\", id)\n            setVidQueue((queue) => [...queue, { e, id }])\n        }\n    }\n\n    const processVidRef = (ref: React.MutableRefObject<HTMLVideoElement[] | undefined>) => {\n        if (ref.current) {\n            for (const message of vidQueue) {\n                if (ref.current[message.id]) {\n                    // Process the queue\n                    gotRemoteStream(message.e, message.id);\n                    // Remove from the queue\n                    setVidQueue((queue) => {\n                        return [...queue.splice(message.id, 1)]\n                    })\n                }\n            }\n        }\n    }\n\n    // useEffect(() => {\n    //     //     // This processes the queue as members come in, this is done becuase members can be added after the stream attempts to add the tracks and so may need to be reproccessed on a new item\n    //     //     for (const message of vidQueue) {\n    //     //         if (incomingVidRef.current[message.id]) {\n    //     //             gotRemoteStream(message.e, message.id);\n    //     //             setVidQueue((queue) => {\n    //     //                 return [...queue.splice(message.id, 1)]\n    //     //             })\n    //     //         }\n    //     //         // console.log(\"processing msg:\", message)\n    //     //         // const index = Array.from(callMembers).indexOf(message.id)\n    //     //         // if (index !== -1) {\n    //     //         //              // }\n    //     console.log(\"added CallMember\", callMembers)\n    // }, [callMembers])\n\n\n\n    const disconnectCall = () => {\n        //emptyTracks\n        socketContext?.socket?.current?.emptyTracks();;\n    }\n\n    useEffect(() => {\n        console.log(\"Joining selected Romm:\", selectedRoom)\n        if (selectedRoom) {\n            joinRoom(selectedRoom)\n        }\n        return disconnectCall\n    }, [selectedRoom])\n\n\n    return (\n        <Grid>\n            <div style={{ position: \"relative\" }}>\n                <video ref={videoRef} onCanPlay={canPlay} id=\"player\" autoPlay playsInline muted width=\"426\" height=\"240\" />\n                <p style={{ position: \"absolute\", color: 'green', top: 10, left: 10 }}>{`${authcontext?.selfState.user?.first_name || \"\"} ${authcontext?.selfState.user?.last_name || \"\"}`}</p>\n            </div>\n\n            {callMembers.map((member) =>\n            (\n                <>\n                    <VideoPanel videoRef={setIncomingVidRef(member)} key={member} />\n                </>)\n            )}\n            <p>{callMessage}</p>\n        </Grid>\n    )\n}",["203","204"],"/home/rmdadmin/Docs/aloop-frontend/src/components/video/VideoPanel.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/utils/useRefCallback.tsx",[],"/home/rmdadmin/Docs/aloop-frontend/src/api/messageQueries.ts",[],"/home/rmdadmin/Docs/aloop-frontend/src/components/chat/ChatWindow.tsx",["205","206","207"],"import React, { SyntheticEvent, useContext, useRef, useState } from 'react'\nimport { Flex, Chat, Button, ChatItemProps, ShorthandCollection, Input } from \"@fluentui/react-northstar\"\nimport { CancelIcon, MessageIcon, SendIcon } from '../../style/icons'\nimport { gsaTheme } from '../../style/theme'\nimport { MessageRes, useGetTextChannelMessagesQuery, useNewMessageQuery } from '../../api/messageQueries'\nimport { AuthUserContext } from '../app/App'\n\ninterface Props {\n    setSelectedTextChan: React.Dispatch<React.SetStateAction<[number, String] | undefined>>\n    selectedTextChan: [number, String]\n}\n\nexport const ChatWindow: React.FC<Props> = ({ children, setSelectedTextChan, selectedTextChan }) => {\n    const { data, error, isFetching } = useGetTextChannelMessagesQuery(selectedTextChan[0]);\n    const { mutate } = useNewMessageQuery();\n    const authContext = useContext(AuthUserContext)\n    // const messageInput = useRef<HTMLInputElement | null>(null)\n    const [text, setText] = useState<string>('')\n\n\n    const mapDataToItems = (data: MessageRes[] | undefined): ShorthandCollection<ChatItemProps> => {\n        return data?.map((message) => ({\n            message: (\n                <Chat.Message content={message.contents} author={message.author_id} timestamp={message.created_at} mine={message.author_id === authContext?.selfState.user?.user_id} />\n            ),\n            // contentPosition: message.author_id === authContext?.selfState.user?.user_id ? 'end' : 'start',\n            attached: 'top',\n            key: 'message-id-' + message.message_id,\n        })) || []\n    }\n\n    const sendMessage = () => {\n        if (text) {\n            mutate({\n                contents: text,\n                text_channel_id: selectedTextChan[0]\n            })\n            setText(\"\")\n        } else {\n            console.log(\"No value\")\n        }\n    }\n\n    return (\n        <Flex style={{ width: '24rem', height: '100%', position: \"relative\", top: 0, left: 0, flexDirection: \"column\" }}>\n            <Chat style={{ width: \"100%\", padding: 0, flex: 1, overflowY: 'scroll', flexDirection: 'column-reverse' }} items={mapDataToItems(data).reverse()} />\n            <Flex style={{ width: \"100%\", padding: \"1rem 0 1rem 0\", backgroundColor: gsaTheme.siteVariables.colors.grey['100'] }} >\n                <Input\n                    fluid\n                    placeholder={\"Message \" + selectedTextChan[1]}\n                    iconPosition=\"start\"\n                    icon={<MessageIcon />}\n                    value={text}\n                    onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                            sendMessage()\n                        }\n                    }}\n                    onChange={(e) => {\n                        const event = e as SyntheticEvent<HTMLInputElement, Event>;\n                        setText(event?.currentTarget?.value || \"\")\n                    }} />\n                <Button\n                    onClick={sendMessage}\n                    icon={<SendIcon />} iconOnly title=\"Send\" circular />\n            </Flex>\n            <Button onClick={() => { setSelectedTextChan(undefined) }} styles={{\n                alignSelf: 'flex-end', position: 'absolute', top: '1rem', right: '-1rem', ':hover': {\n                    backgroundColor: gsaTheme.siteVariables.colors.grey['800'],\n                },\n            }} icon={<CancelIcon />} iconOnly title=\"Close\" circular />\n        </Flex>\n    )\n}",{"ruleId":"208","severity":1,"message":"209","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":23},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"208","severity":1,"message":"216","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":16},{"ruleId":"208","severity":1,"message":"217","line":1,"column":32,"nodeType":"210","messageId":"211","endLine":1,"endColumn":42},{"ruleId":"208","severity":1,"message":"218","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":29},{"ruleId":"208","severity":1,"message":"219","line":3,"column":20,"nodeType":"210","messageId":"211","endLine":3,"endColumn":26},{"ruleId":"208","severity":1,"message":"220","line":9,"column":8,"nodeType":"210","messageId":"211","endLine":9,"endColumn":20},{"ruleId":"208","severity":1,"message":"221","line":10,"column":10,"nodeType":"210","messageId":"211","endLine":10,"endColumn":19},{"ruleId":"208","severity":1,"message":"222","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":20},{"ruleId":"208","severity":1,"message":"223","line":15,"column":10,"nodeType":"210","messageId":"211","endLine":15,"endColumn":19},{"ruleId":"208","severity":1,"message":"224","line":12,"column":11,"nodeType":"210","messageId":"211","endLine":12,"endColumn":23},{"ruleId":"208","severity":1,"message":"225","line":21,"column":11,"nodeType":"210","messageId":"211","endLine":21,"endColumn":23},{"ruleId":"208","severity":1,"message":"216","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":16},{"ruleId":"208","severity":1,"message":"226","line":1,"column":86,"nodeType":"210","messageId":"211","endLine":1,"endColumn":90},{"ruleId":"208","severity":1,"message":"221","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":19},{"ruleId":"208","severity":1,"message":"227","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":20},{"ruleId":"208","severity":1,"message":"220","line":9,"column":8,"nodeType":"210","messageId":"211","endLine":9,"endColumn":20},{"ruleId":"208","severity":1,"message":"228","line":17,"column":19,"nodeType":"210","messageId":"211","endLine":17,"endColumn":24},{"ruleId":"208","severity":1,"message":"229","line":17,"column":26,"nodeType":"210","messageId":"211","endLine":17,"endColumn":36},{"ruleId":"208","severity":1,"message":"230","line":18,"column":40,"nodeType":"210","messageId":"211","endLine":18,"endColumn":53},{"ruleId":"208","severity":1,"message":"231","line":18,"column":67,"nodeType":"210","messageId":"211","endLine":18,"endColumn":85},{"ruleId":"208","severity":1,"message":"232","line":20,"column":12,"nodeType":"210","messageId":"211","endLine":20,"endColumn":24},{"ruleId":"233","severity":1,"message":"234","line":100,"column":8,"nodeType":"235","endLine":100,"endColumn":28,"suggestions":"236"},{"ruleId":"233","severity":1,"message":"237","line":108,"column":8,"nodeType":"235","endLine":108,"endColumn":10,"suggestions":"238"},{"ruleId":"208","severity":1,"message":"239","line":10,"column":7,"nodeType":"210","messageId":"211","endLine":10,"endColumn":20},{"ruleId":"208","severity":1,"message":"240","line":1,"column":31,"nodeType":"210","messageId":"211","endLine":1,"endColumn":40},{"ruleId":"208","severity":1,"message":"241","line":3,"column":16,"nodeType":"210","messageId":"211","endLine":3,"endColumn":24},{"ruleId":"208","severity":1,"message":"242","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":14},{"ruleId":"208","severity":1,"message":"243","line":12,"column":13,"nodeType":"210","messageId":"211","endLine":12,"endColumn":19},{"ruleId":"208","severity":1,"message":"244","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":24},{"ruleId":"208","severity":1,"message":"218","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":29},{"ruleId":"208","severity":1,"message":"216","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":9,"column":52,"nodeType":"247","messageId":"248","endLine":9,"endColumn":82,"fix":"249"},{"ruleId":"208","severity":1,"message":"218","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":29},{"ruleId":"208","severity":1,"message":"250","line":1,"column":31,"nodeType":"210","messageId":"211","endLine":1,"endColumn":39},{"ruleId":"208","severity":1,"message":"251","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":14},{"ruleId":"208","severity":1,"message":"252","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":21},{"ruleId":"208","severity":1,"message":"253","line":2,"column":20,"nodeType":"210","messageId":"211","endLine":2,"endColumn":29},{"ruleId":"208","severity":1,"message":"250","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":25},{"ruleId":"208","severity":1,"message":"216","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":16},{"ruleId":"208","severity":1,"message":"254","line":30,"column":12,"nodeType":"210","messageId":"211","endLine":30,"endColumn":18},{"ruleId":"208","severity":1,"message":"255","line":55,"column":11,"nodeType":"210","messageId":"211","endLine":55,"endColumn":18},{"ruleId":"233","severity":1,"message":"256","line":79,"column":8,"nodeType":"235","endLine":79,"endColumn":18,"suggestions":"257"},{"ruleId":"233","severity":1,"message":"258","line":139,"column":8,"nodeType":"235","endLine":139,"endColumn":22,"suggestions":"259"},{"ruleId":"212","replacedBy":"260"},{"ruleId":"214","replacedBy":"261"},{"ruleId":"208","severity":1,"message":"262","line":1,"column":45,"nodeType":"210","messageId":"211","endLine":1,"endColumn":51},{"ruleId":"208","severity":1,"message":"228","line":14,"column":19,"nodeType":"210","messageId":"211","endLine":14,"endColumn":24},{"ruleId":"208","severity":1,"message":"229","line":14,"column":26,"nodeType":"210","messageId":"211","endLine":14,"endColumn":36},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["263"],"no-negated-in-lhs",["264"],"'Button' is defined but never used.","'useContext' is defined but never used.","'ReactElement' is defined but never used.","'Router' is defined but never used.","'CenteredPage' is defined but never used.","'VideoCall' is defined but never used.","'VideoRooms' is defined but never used.","'SidePanel' is defined but never used.","'OneToOneData' is defined but never used.","'OneToAllData' is defined but never used.","'Chat' is defined but never used.","'CancelIcon' is defined but never used.","'error' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'textChanError' is assigned a value but never used.","'textChanIsFetching' is assigned a value but never used.","'selectedRoom' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setRoom', 'textChanMenu', 'unseenCounter', and 'vidChanMenu'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMenuItems' needs the current value of 'unseenCounter'.","ArrayExpression",["265"],"React Hook useEffect has a missing dependency: 'socketContext?.socket'. Either include it or remove the dependency array.",["266"],"'CREATE_SUFFIX' is assigned a value but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'Flex' is defined but never used.","'status' is assigned a value but never used.","'useQueryClient' is defined but never used.","no-useless-rename","Destructuring assignment vertCenter unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"267","text":"268"},"'useState' is defined but never used.","'Form' is defined but never used.","'useMutation' is defined but never used.","'postFetch' is defined but never used.","'inCall' is assigned a value but never used.","'pipeErr' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'gotRemoteStream' and 'socketContext?.socket'. Either include them or remove the dependency array.",["269"],"React Hook useEffect has missing dependencies: 'disconnectCall' and 'joinRoom'. Either include them or remove the dependency array.",["270"],["263"],["264"],"'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},[247,277],"vertCenter = false",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [data, setRoom, textChanData, textChanMenu, unseenCounter, vidChanMenu]",{"range":"279","text":"280"},"Update the dependencies array to be: [socketContext?.socket]",{"range":"281","text":"282"},"Update the dependencies array to be: [gotRemoteStream, socketContext?.socket, videoRef]",{"range":"283","text":"284"},"Update the dependencies array to be: [disconnectCall, joinRoom, selectedRoom]",{"range":"285","text":"286"},[3844,3864],"[data, setRoom, textChanData, textChanMenu, unseenCounter, vidChanMenu]",[4161,4163],"[socketContext?.socket]",[3121,3131],"[gotRemoteStream, socketContext?.socket, videoRef]",[5404,5418],"[disconnectCall, joinRoom, selectedRoom]"]